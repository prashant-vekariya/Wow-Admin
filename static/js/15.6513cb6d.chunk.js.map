{"version":3,"sources":["@core/components/avatar/index.js","utility/Utils.js","utility/hooks/useSkin.js","redux/actions/auth/index.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","@core/auth/jwt/useJwt.js","redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/Authentication.js","router/routes/Pages.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js"],"names":["Avatar","forwardRef","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","Tag","tag","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","isObjEmpty","obj","Object","keys","length","isUserLoggedIn","localStorage","getItem","getHomeRouteForLoggedInUser","userRole","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","useSkin","useState","item","window","JSON","parse","themeConfig","layout","skin","error","console","log","setSkin","useEffect","element","document","body","classList","remove","add","dark","bordered","value","valueToStore","Function","setItem","stringify","config","useJwt","jwtConfig","handleLogin","data","dispatch","type","storageTokenKeyName","storageRefreshTokenKeyName","accessToken","refreshToken","handleLogout","removeItem","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","JwtService","jwtOverrideConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","axios","interceptors","request","use","getToken","headers","Authorization","Promise","reject","response","originalRequest","then","r","setToken","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","args","post","getRefreshToken","jwt","handleContentWidth","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Fragment","menuCollapsed","menuHidden","query","Authentication","path","component","lazy","meta","authRoute","PagesRoutes","exact","navLink","DefaultRoute","Routes","BlankLayout","isMounted","setIsMounted","Customizer","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","FormGroup","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","id","onChange","renderSkinsRadio","classNamePrefix","defaultValue","options","isClearable","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","Footer","Date","getFullYear","target","rel","UserDropdown","userData","setUserData","userAvatar","avatar","defaultAvatar","UncontrolledDropdown","DropdownToggle","role","DropdownMenu","right","DropdownItem","Link","to","NavbarUser","setMenuVisibility","ThemeToggler","NavItem","NavLink","ThemeNavbar","title","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","app","appLogoImage","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","match","res","recurse","current","key","VerticalNavMenuLink","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","strict","arr","parents","searchParents","disabled","active","newTab","isActive","url","resetActiveGroup","badge","Badge","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","val","onCollapseClick","pop","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","wheelPropagation","onScrollY","container","scrollTop","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","handleRTL","useNavbarType","useFooterType","footer","useNavbarColor","backgroundColor","VerticalLayout","menuVisibility","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","addEventListener","bgColorCondition","floating","sticky","static","hidden","Navbar","expand","light","show","customizer","showUnder","bottom","Button","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","maxHeight","overflowY","ddRef","left","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","footerClasses","navbarClasses","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","useContext","AbilityContext","Layouts","NotAuthorized","Error","basename","process","render","LayoutTag","LayoutRoutes","LayoutPaths","route","LayoutRoutesAndPaths","assign","fallback","App"],"mappings":"6VAQMA,EAASC,sBAAW,SAACC,EAAOC,GAAS,IAAD,IAGtCC,EAiBEF,EAjBFE,MACAC,EAgBEH,EAhBFG,UACAC,EAeEJ,EAfFI,aACAC,EAcEL,EAdFK,SACAC,EAaEN,EAbFM,KACAC,EAYEP,EAZFO,QACAC,EAWER,EAXFQ,QACAC,EAUET,EAVFS,KACAC,EASEV,EATFU,WACAC,EAQEX,EARFW,UACAC,EAOEZ,EAPFY,IACAC,EAMEb,EANFa,UACAC,EAKEd,EALFc,SACAC,EAIEf,EAJFe,OACKC,EAGHhB,EAHFiB,IACAC,EAEElB,EAFFkB,cACGC,EAjBL,YAkBInB,EAlBJ,GA8BA,OACE,eAACgB,EAAD,yBACEb,UAAWiB,IAAW,UAAD,mBAClBjB,EAAYA,GADM,2BAEZD,GAAUA,GAFE,+BAGRI,GAASA,GAHD,IAKrBL,IAAKA,GACDkB,GAPN,eASW,IAARP,QAAyBS,IAART,EAChB,uBACET,UAAWiB,IAAW,iBAAkB,CACtC,oBAAqBb,IAEvBe,MAAOJ,EAJT,UAMGb,EA1BW,SAAAkB,GAClB,IAAMC,EAAU,GAKhB,OAJkBD,EAAIE,MAAM,KAClBC,SAAQ,SAAAC,GAChBH,EAAQI,KAAKD,EAAE,OAEVH,EAAQK,KAAK,IAoBFC,CAAYtB,GAAWA,EAElCC,GAAc,KACdF,EACC,cAAC,IAAD,CAAOL,MAAOQ,GAA0B,UAAWP,UAAU,oBAAoB4B,MAAI,EAArF,SACGpB,GAAwB,MAEzB,QAGN,qBACER,UAAWiB,IAAW,eACnBhB,EAAeA,IAElB4B,IAAKpB,EACLqB,IAAI,YACJC,OAAQrB,IAAcP,EAAOO,EAAY,GACzCsB,MAAOrB,IAAaR,EAAOQ,EAAW,KAGzCC,EACC,sBACEZ,UAAWiB,KAAU,2CACDL,GAAWA,GADV,sCAEDT,GAASA,GAFR,MAKrB,YAKKR,MA+DfA,EAAOsC,aAAe,CACpBnB,IAAK,Q,oLCxJMoB,EAAa,SAAAC,GAAG,OAAgC,IAA5BC,OAAOC,KAAKF,GAAKG,QAiDrCC,EAAiB,kBAAMC,aAAaC,QAAQ,aAW5CC,EAA8B,SAAAC,GACzC,MAAiB,UAAbA,EAA6B,IAChB,WAAbA,EAA8B,kBAC3B,UAIIC,EAAoB,SAAAC,GAAK,kCACjCA,GADiC,IAEpCC,OAAO,2BACFD,EAAMC,QADL,IAEJC,UAAW,YACXC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,gB,uGCtEFC,EAAU,WAErB,MAAwBC,oBAAS,WAC/B,IAEE,IAAMC,EAAOC,OAAOf,aAAaC,QAAQ,QAEzC,OAAOa,EAAOE,KAAKC,MAAMH,GAAQI,IAAYC,OAAOC,KACpD,MAAOC,GAGP,OADAC,QAAQC,IAAIF,GACLH,IAAYC,OAAOC,SAT9B,mBAAOA,EAAP,KAAaI,EAAb,KAgDA,OApBAC,qBAAU,WAAO,IAAD,EAERC,EAAUX,OAAOY,SAASC,MAUhC,EAAAF,EAAQG,WAAUC,OAAlB,oBAA4BJ,EAAQG,YAGvB,UAATT,GACFM,EAAQG,UAAUE,IAXD,CACjBC,KAAM,cACNC,SAAU,kBACV,YAAa,oBAQoBb,MAElC,CAACA,IAEG,CAACA,EAlCS,SAAAc,GACf,IAEE,IAAMC,EAAeD,aAAiBE,SAAWF,EAAMd,GAAQc,EAE/DV,EAAQW,GAERpB,OAAOf,aAAaqC,QAAQ,OAAQrB,KAAKsB,UAAUH,IACnD,MAAOd,GAEPC,QAAQC,IAAIF,Q,uIC7BZkB,E,OAASC,EAAOC,UAGTC,EAAc,SAAAC,GACzB,OAAO,SAAAC,GAAa,IAAD,EACjBA,GAAQ,GACNC,KAAM,QACNF,OACAJ,UAHM,cAILA,EAAOO,oBAAsBH,EAAKJ,EAAOO,sBAJpC,cAKLP,EAAOQ,2BAA6BJ,EAAKJ,EAAOQ,6BAL3C,IASR/C,aAAaqC,QAAQ,WAAYrB,KAAKsB,UAAUK,IAChD3C,aAAaqC,QAAQE,EAAOO,oBAAqB9B,KAAKsB,UAAUK,EAAKK,cACrEhD,aAAaqC,QAAQE,EAAOQ,2BAA4B/B,KAAKsB,UAAUK,EAAKM,iBAKnEC,EAAe,WAC1B,OAAO,SAAAN,GAAa,IAAD,EACjBA,GAAQ,GAAGC,KAAM,UAAT,cAAoBN,EAAOO,oBAAsB,MAAjD,cAAwDP,EAAOQ,2BAA6B,MAA5F,IAGR/C,aAAamD,WAAW,YACxBnD,aAAamD,WAAWZ,EAAOO,qBAC/B9C,aAAamD,WAAWZ,EAAOQ,+B,+EC9BpB,GACbK,cAAe,aACfC,iBAAkB,gBAClBC,gBAAiB,qBACjBC,eAAgB,cAIhBC,UAAW,SAGXV,oBAAqB,cACrBC,2BAA4B,gBCVTU,E,WAUnB,WAAYC,GAAoB,IAAD,gCAR/BjB,UAQ+B,eARdkB,GAQc,KAL/BC,8BAA+B,EAKA,KAF/BC,YAAc,GAGZC,KAAKrB,UAAL,2BAAsBqB,KAAKrB,WAAciB,GAGzCK,IAAMC,aAAaC,QAAQC,KACzB,SAAA3B,GAEE,IAAMS,EAAc,EAAKmB,WAOzB,OAJInB,IAEFT,EAAO6B,QAAQC,cAAf,UAAkC,EAAK5B,UAAUe,UAAjD,YAA8DR,IAEzDT,KAET,SAAAlB,GAAK,OAAIiD,QAAQC,OAAOlD,MAI1B0C,IAAMC,aAAaQ,SAASN,KAC1B,SAAAM,GAAQ,OAAIA,KACZ,SAAAnD,GAEE,IAAQkB,EAAqBlB,EAArBkB,OAAQiC,EAAanD,EAAbmD,SACVC,EAAkBlC,EAGxB,OAAIiC,GAAgC,MAApBA,EAASpG,QAClB,EAAKwF,+BACR,EAAKA,8BAA+B,EACpC,EAAKX,eAAeyB,MAAK,SAAAC,GACvB,EAAKf,8BAA+B,EAGpC,EAAKgB,SAASD,EAAEhC,KAAKK,aACrB,EAAK6B,gBAAgBF,EAAEhC,KAAKM,cAE5B,EAAK6B,qBAAqBH,EAAEhC,KAAKK,iBAGR,IAAIsB,SAAQ,SAAAS,GACvC,EAAKC,eAAc,SAAAhC,GAIjByB,EAAgBL,QAAQC,cAAxB,UAA2C,EAAK5B,UAAUe,UAA1D,YAAuER,GACvE+B,EAAQ,EAAKhB,MAAMU,WAKlBH,QAAQC,OAAOlD,M,wDAK5B,SAAqB2B,GACnBc,KAAKD,YAAcC,KAAKD,YAAYoB,QAAO,SAAAC,GAAQ,OAAIA,EAASlC,Q,2BAGlE,SAAckC,GACZpB,KAAKD,YAAY5E,KAAKiG,K,sBAGxB,WACE,OAAOlF,aAAaC,QAAQ6D,KAAKrB,UAAUK,uB,6BAG7C,WACE,OAAO9C,aAAaC,QAAQ6D,KAAKrB,UAAUM,8B,sBAG7C,SAASb,GACPlC,aAAaqC,QAAQyB,KAAKrB,UAAUK,oBAAqBZ,K,6BAG3D,SAAgBA,GACdlC,aAAaqC,QAAQyB,KAAKrB,UAAUM,2BAA4Bb,K,mBAGlE,WAAgB,IAAD,uBAANiD,EAAM,yBAANA,EAAM,gBACb,OAAOpB,IAAMqB,KAAN,MAAArB,IAAK,CAAMD,KAAKrB,UAAUW,eAArB,OAAuC+B,M,sBAGrD,WAAmB,IAAD,uBAANA,EAAM,yBAANA,EAAM,gBAChB,OAAOpB,IAAMqB,KAAN,MAAArB,IAAK,CAAMD,KAAKrB,UAAUY,kBAArB,OAA0C8B,M,0BAGxD,WACE,OAAOpB,IAAMqB,KAAKtB,KAAKrB,UAAUa,gBAAiB,CAChDL,aAAca,KAAKuB,wB,KCrGzB,IAAQC,ECIC,CACLA,IAHU,IAAI7B,EDFK,KAAf6B,IAEOA,O,iMEJFC,EAAqB,SAAArD,GAAK,OAAI,SAAAU,GAAQ,OAAIA,EAAS,CAAEC,KAAM,uBAAwBX,YAGnFsD,EAAsB,SAAAtD,GAAK,OAAI,SAAAU,GAAQ,OAAIA,EAAS,CAAEC,KAAM,wBAAyBX,YAGrFuD,EAAmB,SAAAvD,GAAK,OAAI,SAAAU,GAAQ,OAAIA,EAAS,CAAEC,KAAM,qBAAsBX,Y,gBCiF7EwD,EA3EO,SAAArI,GAAU,IAAD,EAErB8D,EAAqE9D,EAArE8D,OAAQwE,EAA6DtI,EAA7DsI,SAAUC,EAAmDvI,EAAnDuI,UAAWC,EAAwCxI,EAAxCwI,aAAcC,EAA0BzI,EAA1ByI,WAAYC,EAAc1I,EAAd0I,UAGzDnD,EAAWoD,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,KAC7BC,EAAcH,EAAMI,OACpBC,EAAeL,EAAM9E,OAAOmF,aAG5BjI,EAAiB,qBAAX8C,GAAkCyE,EAAoBW,WAAR,MAiC1D,OAfA9E,qBAAU,WAYR,OAXIsE,IACEA,EAAUO,cACZ1D,EAAS2C,EAAmBQ,EAAUO,eAEpCP,EAAUS,eACZ5D,EAAS4C,EAAoBO,EAAUS,gBAErCT,EAAUU,YACZ7D,EAAS6C,EAAiBM,EAAUU,cAGjC,WA1BHV,IACEA,EAAUO,cACZ1D,EAAS2C,EAAmB,SAE1BQ,EAAUS,eACZ5D,EAAS4C,GAAqBO,EAAUS,gBAEtCT,EAAUU,YACZ7D,EAAS6C,GAAkBM,EAAUU,iBAmBxC,IAGD,sBACEjJ,UAAWiB,IAAW,uCAAD,mBAClBoH,EAAeA,GADG,cAEnB,eAAgBO,EAAYM,MAAM5G,QAFf,IADvB,UAME,qBAAKtC,UAAU,oBACf,qBAAKA,UAAU,yBACf,qBACEA,UAAWiB,IAAW,aACpB,mBAAoBmH,EACpB,uBAAwBA,EACxB,gBAAkC,UAAjBU,GAHE,qCAIYR,GAA8B,SAAfA,GAAyBA,EAAWhG,SALtF,SAQE,cAACzB,EAAD,2BAEkB,qBAAX8C,GAAkCyE,EAEnC,GADA,CAAEpI,UAAWiB,IAAW,CAAE,gBAAiBmH,MAHjD,aAOGD,W,2BC9CIgB,EAhCQ,CACnB,CACIC,KAAM,SACNC,UAAWC,gBAAK,kBAAM,sEACtB3F,OAAQ,cACR4F,KAAM,CACFC,WAAW,IAGnB,CACIJ,KAAM,YACNC,UAAWC,gBAAK,kBAAM,sEACtB3F,OAAQ,cACR4F,KAAM,CACFC,WAAW,IAGnB,CACIJ,KAAM,mBACNC,UAAWC,gBAAK,kBAAM,wDACtB3F,OAAQ,cACR4F,KAAM,CACFC,WAAW,IAGnB,CACIJ,KAAM,kBACNC,UAAWC,gBAAK,kBAAM,wDACtB3F,OAAQ,gBCmCD8F,EA/DK,CAChB,CACIL,KAAM,aACNC,UAAWC,gBAAK,kBAAM,iEAE1B,CACIF,KAAM,SACNM,OAAO,EACPL,UAAWC,gBAAK,kBAAM,uEAE1B,CACIF,KAAM,wBACNC,UAAWC,gBAAK,kBAAM,iEAE1B,CACIF,KAAM,gBACNC,UAAWC,gBAAK,kBAAM,sEAE1B,CACIF,KAAM,qBACNC,UAAWC,gBAAK,kBAAM,sEAO1B,CACIF,KAAM,oBACNC,UAAWC,gBAAK,kBAAM,8EACtBC,KAAM,CACFI,QAAS,oBAQjB,CACIP,KAAM,oBACNC,UAAWC,gBAAK,kBAAM,gEACtBC,KAAM,CACFI,QAAS,oBAGjB,CACIP,KAAM,OACNM,OAAO,EACPL,UAAWC,gBAAK,kBAAM,wEAE1B,CACIF,KAAM,WACNM,OAAO,EACPL,UAAWC,gBAAK,kBAAM,0DAE1B,CACIF,KAAM,SACNC,UAAWC,gBAAK,kBAAM,iCACtB3F,OAAQ,gBCtDViG,EAAe,aAIfC,EAAM,sBACPV,GADO,YAEPM,I,iCCoBUK,EA5BK,SAAC,GAA2B,IAAzB3B,EAAwB,EAAxBA,SAErB,GAF6C,iBAErB/E,eAAxB,mBAGA,GAHA,UAGkCC,oBAAS,IAA3C,mBAAO0G,EAAP,KAAkBC,EAAlB,KAQA,OALA/F,qBAAU,WAER,OADA+F,GAAa,GACN,kBAAMA,GAAa,MACzB,IAEED,EAKH,qBAAK/J,UAAU,aAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,eAAf,SAA+BmI,UAP9B,M,4GCgVI8B,G,OAtVI,SAAApK,GAEjB,IACE+D,EAoBE/D,EApBF+D,KACAI,EAmBEnE,EAnBFmE,QACAkG,EAkBErK,EAlBFqK,MACAC,EAiBEtK,EAjBFsK,SACAxG,EAgBE9D,EAhBF8D,OACAyG,EAeEvK,EAfFuK,UACAC,EAcExK,EAdFwK,WACAC,EAaEzK,EAbFyK,cACAC,EAYE1K,EAZF0K,WACAC,EAWE3K,EAXF2K,cACAC,EAUE5K,EAVF4K,YACAC,EASE7K,EATF6K,eACAC,EAQE9K,EARF8K,SACAC,EAOE/K,EAPF+K,YACA9B,EAMEjJ,EANFiJ,aACA+B,EAKEhL,EALFgL,gBACA7B,EAIEnJ,EAJFmJ,cACA8B,EAGEjL,EAHFiL,iBACAxC,EAEEzI,EAFFyI,WACAyC,EACElL,EADFkL,cAIF,EAA4C1H,oBAAS,GAArD,mBAAO2H,EAAP,KAAuBC,EAAvB,KAGMC,EAAe,SAAA1J,GACnBA,EAAE2J,iBACFF,GAAmBD,IAqJfI,EAAoB,CACxB,CAAE1G,MAAO,SAAU2G,MAAO,QAC1B,CAAE3G,MAAO,aAAc2G,MAAO,gBAC9B,CAAE3G,MAAO,SAAU2G,MAAO,WAC1B,CAAE3G,MAAO,OAAQ2G,MAAO,SAIpBC,EAAkBF,EAAkBG,MAAK,SAAAC,GAAC,OAAIA,EAAE9G,QAAU4D,KAEhE,OACE,sBACEtI,UAAWiB,IAAW,+BAAgC,CACpDwK,KAAMT,IAFV,UAKE,mBAAGU,KAAK,IAAI1L,UAAU,qEAAqE2L,QAAST,EAApG,SACE,cAAC,IAAD,CAAU/K,KAAM,GAAIH,UAAU,cAEhC,eAAC,IAAD,CAAkBA,UAAU,qBAA5B,UACE,sBAAKA,UAAU,qDAAf,UACE,oBAAIA,UAAU,OAAd,8BACA,mBAAGA,UAAU,MAAb,8CACA,mBAAG0L,KAAK,IAAI1L,UAAU,mBAAmB2L,QAAST,EAAlD,SACE,cAAC,IAAD,SAIJ,uBAEA,sBAAKlL,UAAU,OAAf,UACE,eAAC4L,EAAA,EAAD,CAAW5L,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,kBACA,qBAAKA,UAAU,SAAf,SAlLe,WACvB,IAAM6L,EAAW,CACf,CACEC,KAAM,QACNT,MAAO,QACPU,QAAkB,UAATnI,GAEX,CACEkI,KAAM,WACNT,MAAO,WACPU,QAAkB,aAATnI,GAEX,CACEkI,KAAM,OACNT,MAAO,OACPU,QAAkB,SAATnI,GAEX,CACEkI,KAAM,YACNT,MAAO,YACPU,QAAkB,cAATnI,IAIb,OAAOiI,EAASG,KAAI,SAACC,EAAOC,GAC1B,IAAMC,EAAkBD,IAAUL,EAASvJ,OAAS,EAEpD,MAAe,qBAAXqB,GAAgD,cAAfsI,EAAMH,KAClC,KAIP,cAACM,EAAA,EAAD,CAEE/G,KAAK,QACLgH,GAAIJ,EAAMH,KACVT,MAAOY,EAAMZ,MACbU,QAASE,EAAMF,QACfO,SAAU,kBAAMtI,EAAQiI,EAAMH,OAC9B9L,UAAWiB,IAAW,CAAE,OAAQkL,KAN3BD,MAiJsBK,QAG3B,eAACX,EAAA,EAAD,CAAW5L,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,2BACA,sBAAKA,UAAU,SAAf,UACE,cAACoM,EAAA,EAAD,CACE/G,KAAK,QACLgH,GAAG,aACHrM,UAAU,OACVqL,MAAM,aACNU,QAA0B,SAAjBjD,EACTwD,SAAU,kBAAMzB,EAAgB,WAElC,cAACuB,EAAA,EAAD,CACE/G,KAAK,QACLgH,GAAG,QACHhB,MAAM,QACNU,QAA0B,UAAjBjD,EACTwD,SAAU,kBAAMzB,EAAgB,kBAKtC,cAACe,EAAA,EAAD,CAAW5L,UAAU,OAArB,SACE,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,gCAAb,iBACA,cAACoM,EAAA,EAAD,CAAa/G,KAAK,SAASgH,GAAG,MAAMP,KAAK,MAAMC,QAAS7B,EAAOoC,SAAU,kBAAMnC,GAAUD,WAI7F,cAAC0B,EAAA,EAAD,CAAW5L,UAAU,OAArB,SACE,sBAAKA,UAAU,oDAAf,UACE,mBAAGA,UAAU,wBAAb,+BACA,cAAC,IAAD,CACE6C,MAAOD,IACP5C,UAAU,eACVwM,gBAAgB,SAChBC,aAAcrB,EAAkB,GAChC1G,MAAO4G,EACPoB,QAAStB,EACTuB,aAAa,EACbL,SAAU,gBAAG5H,EAAH,EAAGA,MAAH,OAAeqG,EAAcrG,cAM/C,uBAEA,sBAAK1E,UAAU,OAAf,UACE,mBAAGA,UAAU,mBAAb,yBACA,cAAC4L,EAAA,EAAD,CAAW5L,UAAU,OAArB,SACE,sBAAKA,UAAU,4BAAf,UACE,cAACoM,EAAA,EAAD,CACE/G,KAAK,QACLgH,GAAG,kBACHhB,MAAM,WACNU,QAAoB,mBAAXpI,EACT2I,SAAU,kBAAMlC,EAAU,aAC1BpK,UAAU,SAEZ,cAACoM,EAAA,EAAD,CACE/G,KAAK,QACLgH,GAAG,oBACHhB,MAAM,aACNU,QAAoB,qBAAXpI,EACT2I,SAAU,kBAAMlC,EAAU,sBAIpB,qBAAXzG,EACC,cAACiI,EAAA,EAAD,CAAW5L,UAAU,OAArB,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,gCAAb,4BACA,cAACoM,EAAA,EAAD,CACE/G,KAAK,SACLgH,GAAG,iBACHP,KAAK,iBACLC,QAAS/C,EACTsD,SAAU,kBAAMxB,GAAkB9B,WAItC,KAEJ,cAAC4C,EAAA,EAAD,CAAW5L,UAAU,OAArB,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,gCAAb,yBACA,cAACoM,EAAA,EAAD,CACE/G,KAAK,SACLgH,GAAG,cACHP,KAAK,cACLC,QAASpB,EACT2B,SAAU,kBAAM1B,GAAaD,cAMrC,uBAEA,sBAAK3K,UAAU,OAAf,UACc,qBAAX2D,EACC,eAACiI,EAAA,EAAD,CAAW5L,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,0BACA,oBAAIA,UAAU,4BAAd,SA7OQ,CAAC,QAAS,UAAW,YAAa,UAAW,SAAU,OAAQ,UAAW,QAE3EgM,KAAI,SAAAjM,GAAK,OACxB,oBAEEC,UAAWiB,IAAW,gBAAD,OAAiBlB,GAAS,CAC7C6M,SAAUnC,IAAgB1K,EAC1B8M,OAAkB,UAAV9M,IAEV4L,QAAS,kBAAMjB,EAAe3K,KALzBA,WA2OC,KAEJ,eAAC6L,EAAA,EAAD,CAAW5L,UAAU,OAArB,UACE,oBAAGA,UAAU,mBAAb,UAA4C,qBAAX2D,EAAgC,OAAS,SAA1E,WACA,qBAAK3D,UAAU,SAAf,SApOoB,WAC5B,IAAM8M,EAAgB,CACpB,CACEhB,KAAM,WACNT,MAAO,WACPU,QAAwB,aAAf1B,GAEX,CACEyB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAf1B,GAEX,CACEyB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAf1B,GAEX,CACEyB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAf1B,IAIb,OAAOyC,EAAcd,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUY,EAAcxK,OAAS,EAEzD,MAAe,qBAAXqB,GAAgD,WAAfsI,EAAMH,KAClC,KAIP,cAACM,EAAA,EAAD,CAEE/G,KAAK,QACLgH,GAAIJ,EAAMH,KACVT,MAAOY,EAAMZ,MACbU,QAASE,EAAMF,QACfO,SAAU,kBAAMhC,EAAc2B,EAAMH,OACpC9L,UAAWiB,IAAW,CAAE,OAAQkL,KAN3BD,MAmMsBa,WAI7B,uBAEA,qBAAK/M,UAAU,OAAf,SACE,eAAC4L,EAAA,EAAD,CAAW5L,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,yBACA,qBAAKA,UAAU,SAAf,SA/LoB,WAC5B,IAAMgN,EAAgB,CACpB,CACElB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAfxB,GAEX,CACEuB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAfxB,GAEX,CACEuB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAfxB,IAIb,OAAOyC,EAAchB,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUc,EAAc1K,OAAS,EAEzD,OACE,cAAC8J,EAAA,EAAD,CAEE/G,KAAK,QACLgH,GAAE,iBAAYJ,EAAMH,MACpBT,MAAOY,EAAMZ,MACbU,QAASE,EAAMF,QACfO,SAAU,kBAAM9B,EAAcyB,EAAMH,OACpC9L,UAAWiB,IAAW,CAAE,OAAQkL,KAN3BD,MAuKsBe,kB,SCvUtBC,EAlBA,WACb,OACE,oBAAGlN,UAAU,gBAAb,UACE,uBAAMA,UAAU,gDAAhB,6BACe,IAAImN,MAAOC,cAAe,IACvC,mBAAG1B,KAAK,8CAA8C2B,OAAO,SAASC,IAAI,sBAA1E,uBAGA,sBAAMtN,UAAU,2BAAhB,sCAEF,uBAAMA,UAAU,mCAAhB,qCAEE,cAAC,IAAD,CAAOG,KAAM,Y,6GC0DNoN,GApDM,WAEnB,IAAMnI,EAAWoD,cAGjB,EAAgCnF,mBAAS,MAAzC,mBAAOmK,EAAP,KAAiBC,EAAjB,KAGAxJ,qBAAU,WACiB,OAArB1B,eACFkL,EAAYjK,KAAKC,MAAMjB,aAAaC,QAAQ,gBAE7C,IAGH,IAAMiL,EAAcF,GAAYA,EAASG,QAAWC,WAEpD,OACE,eAACC,EAAA,EAAD,CAAsB/M,IAAI,KAAKd,UAAU,yBAAzC,UACE,eAAC8N,EAAA,EAAD,CAAgBpC,KAAK,IAAI5K,IAAI,IAAId,UAAU,8BAA8B2L,QAAS,SAAAnK,GAAC,OAAIA,EAAE2J,kBAAzF,UACE,sBAAKnL,UAAU,4BAAf,UACE,sBAAMA,UAAU,6BAAhB,SAA+CwN,GAAYA,EAAQ,UAAiB,aACpF,sBAAMxN,UAAU,cAAhB,SAAgCwN,GAAYA,EAASO,MAAS,aAEhE,cAAC,IAAD,CAAQtN,IAAKiN,EAAYhN,UAAU,KAAKC,SAAS,KAAKC,OAAO,cAE/D,eAACoN,EAAA,EAAD,CAAcC,OAAK,EAAnB,UACE,eAACC,EAAA,EAAD,CAAcpN,IAAKqN,IAAMC,GAAG,IAAIzC,QAAS,SAAAnK,GAAC,OAAIA,EAAE2J,kBAAhD,UACE,cAAC,IAAD,CAAMhL,KAAM,GAAIH,UAAU,UAC1B,sBAAMA,UAAU,eAAhB,wBAEF,eAACkO,EAAA,EAAD,CAAcpN,IAAKqN,IAAMC,GAAG,IAAIzC,QAAS,SAAAnK,GAAC,OAAIA,EAAE2J,kBAAhD,UACE,cAAC,IAAD,CAAMhL,KAAM,GAAIH,UAAU,UAC1B,sBAAMA,UAAU,eAAhB,sBAEF,eAACkO,EAAA,EAAD,CAAcpN,IAAKqN,IAAMC,GAAG,IAAIzC,QAAS,SAAAnK,GAAC,OAAIA,EAAE2J,kBAAhD,UACE,cAAC,IAAD,CAAahL,KAAM,GAAIH,UAAU,UACjC,sBAAMA,UAAU,eAAhB,sBAEF,eAACkO,EAAA,EAAD,CAAcpN,IAAKqN,IAAMC,GAAG,IAAIzC,QAAS,SAAAnK,GAAC,OAAIA,EAAE2J,kBAAhD,UACE,cAAC,IAAD,CAAehL,KAAM,GAAIH,UAAU,UACnC,sBAAMA,UAAU,eAAhB,sBAEF,eAACkO,EAAA,EAAD,CAAcpN,IAAKqN,IAAMC,GAAG,SAASzC,QAAS,kBAAMvG,EAASM,gBAA7D,UACE,cAAC,KAAD,CAAOvF,KAAM,GAAIH,UAAU,UAC3B,sBAAMA,UAAU,eAAhB,8B,kDCtBKqO,GAnCI,SAAAxO,GAEjB,IAAQ+D,EAAqC/D,EAArC+D,KAAMI,EAA+BnE,EAA/BmE,QAASsK,EAAsBzO,EAAtByO,kBAGjBC,EAAe,WACnB,MAAa,SAAT3K,EACK,cAAC,KAAD,CAAK5D,UAAU,QAAQ2L,QAAS,kBAAM3H,EAAQ,YAE9C,cAAC,KAAD,CAAMhE,UAAU,QAAQ2L,QAAS,kBAAM3H,EAAQ,YAI1D,OACE,eAAC,WAAD,WACE,oBAAIhE,UAAU,iDAAd,SACE,cAACwO,GAAA,EAAD,CAASxO,UAAU,sBAAnB,SACE,cAACyO,GAAA,EAAD,CAASzO,UAAU,gDAAgD2L,QAAS,kBAAM2C,GAAkB,IAApG,SACE,cAAC,KAAD,CAAMtO,UAAU,gBAItB,qBAAKA,UAAU,6CAAf,SACE,cAACwO,GAAA,EAAD,CAASxO,UAAU,oBAAnB,SACE,cAACyO,GAAA,EAAD,CAASzO,UAAU,iBAAnB,SACE,cAACuO,EAAD,UAIN,oBAAIvO,UAAU,4CAAd,SACE,cAAC,GAAD,UCtBO0O,GAXK,SAAA7O,GAElB,IAAQ+D,EAAqC/D,EAArC+D,KAAMI,EAA+BnE,EAA/BmE,QAASsK,EAAsBzO,EAAtByO,kBAEvB,OACE,cAAC,WAAD,UACE,cAAC,GAAD,CAAY1K,KAAMA,EAAMI,QAASA,EAASsK,kBAAmBA,O,8BCVpD,IACb,CACEjC,GAAI,YACJsC,MAAO,YACPrO,KAAM,cAAC,KAAD,CAAQH,KAAM,KACpBwJ,QAAS,cAEX,CACE0C,GAAI,OACJsC,MAAO,OACPrO,KAAM,cAAC,IAAD,CAAMH,KAAM,KAClBwJ,QAAS,UAEX,CACE0C,GAAI,QACJsC,MAAO,OACPrO,KAAM,cAAC,IAAD,CAAMH,KAAM,KAClBgI,SAAU,CACR,CACEkE,GAAI,UACJsC,MAAO,YACPrO,KAAM,cAAC,KAAD,CAAQH,KAAM,KACpBwJ,QAAS,iBAEX,CACE0C,GAAI,eACJsC,MAAO,gBACPrO,KAAM,cAAC,KAAD,CAAQH,KAAM,KACpBwJ,QAAS,wBAIf,CACE0C,GAAI,MACJsC,MAAO,MACPrO,KAAM,cAAC,KAAD,CAAQH,KAAM,KACpBwJ,QAAS,S,UC0BEiF,GAtDY,SAAA/O,GAEzB,IAAQmJ,EAAgFnJ,EAAhFmJ,cAAe8B,EAAiEjL,EAAjEiL,iBAAkBwD,EAA+CzO,EAA/CyO,kBAAmBO,EAA4BhP,EAA5BgP,aAAcC,EAAcjP,EAAdiP,UAG1E7K,qBAAU,YACH6K,GAAa9F,GAAe6F,EAAa,MAC7C,CAACC,EAAW9F,IAGf,IAAM+F,EAAU,WACd,OAAK/F,EAWD,cAAC,KAAD,CACE7I,KAAM,GACN,YAAU,cACVH,UAAU,6CACV2L,QAAS,kBAAMb,GAAiB,MAblC,cAAC,KAAD,CACE3K,KAAM,GACN,YAAU,cACVH,UAAU,6CACV2L,QAAS,kBAAMb,GAAiB,OAexC,OACE,qBAAK9K,UAAU,gBAAf,SACE,qBAAIA,UAAU,0BAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,eAAC,IAAD,CAASoO,GAAG,IAAIpO,UAAU,eAA1B,UACE,sBAAMA,UAAU,aAAhB,SACE,qBAAK6B,IAAK6B,IAAYsL,IAAIC,aAAcnN,IAAI,WAE9C,oBAAI9B,UAAU,kBAAd,SAAiC0D,IAAYsL,IAAIE,eAGrD,oBAAIlP,UAAU,sBAAd,SACE,sBAAKA,UAAU,4CAAf,UACE,cAAC+O,EAAD,IACA,cAAC,IAAD,CAAGpD,QAAS,kBAAM2C,GAAkB,IAAQtO,UAAU,uCAAuCG,KAAM,gB,UCpBlGgP,GAAkB,SAACC,EAAMC,EAAYC,GAChD,OACED,IAAeD,GACdE,GAAeA,EAAY/F,MAAQ+F,EAAY/F,KAAKI,SAAW2F,EAAY/F,KAAKI,UAAYyF,GAmBpFG,GAAmB,SAAnBA,EAAoBpH,EAAUkH,EAAYC,GACrD,OAAOnH,EAASqH,MAAK,SAAAC,GAEnB,OAAIA,EAAMtH,SACDoH,EAAiBE,EAAMtH,SAAUkH,EAAYC,GAG/CH,GAAgBM,EAAM9F,QAAS0F,EAAYC,OA+BzCI,GAAS,SAATA,EAAUC,EAAYN,EAAYC,GAC7C,IAAIM,EAkBJ,OAjBAD,EAAWH,MAAK,SAAAC,GACd,IAAItH,EAEJ,OAAIsH,EAAMtH,WAAaA,EAAWuH,EAAOD,EAAMtH,SAAUkH,EAAYC,IAC3DM,EAAS,CACfvD,GAAIoD,EAAMpD,GACVlE,YAKAgH,GAAgBM,EAAM9F,QAAS0F,EAAYC,GACrCM,EAAS,CACfvD,GAAIoD,EAAMpD,SAFd,KAMKuD,GAOIC,GAAgB,SAAC1N,EAAK2N,GACjC,IAAMC,EAAM,GAgBZ,OAfgB,SAAVC,EAAW7N,EAAK8N,GACpB,IAAK,IAAMC,KAAO/N,EAAK,CACrB,IAAMuC,EAAQvC,EAAI+N,QACJhP,IAAVwD,IACEA,GAA0B,kBAAVA,EAClBsL,EAAQtL,EAAOwL,GAEXA,IAAQJ,GACVC,EAAItO,KAAKiD,KAMnBsL,CAAQ7N,GACD4N,GCrBMI,GAxGa,SAAC,GAYtB,IAXL7M,EAWI,EAXJA,KAEA8M,GASI,EAVJC,YAUI,EATJD,gBACAE,EAQI,EARJA,WACAC,EAOI,EAPJA,cAEA1B,GAKI,EANJ2B,UAMI,EALJ3B,cACA4B,EAII,EAJJA,kBACAC,EAGI,EAHJA,WACApB,EAEI,EAFJA,YACAqB,EACI,EADJA,kBAGMC,EAAUtN,EAAKuN,aAAe,IAAMpC,IAGpCqC,EAAWC,cACX1B,EAAayB,EAASE,SAGtBlB,EAAQmB,YAAU5B,EAAY,CAClCjG,KAAK,GAAD,OAAK9F,EAAKqG,QAAV,WACJD,OAAO,EACPwH,QAAQ,IA+BV,OARAjN,qBAAU,WACR,GAA0B,OAAtB0M,EAA4B,CAC9BJ,EAAcI,GACd,IAAMQ,EAtBY,SAACxB,EAAYN,GACjC,IAAM+B,EAAU1B,GAAOC,EAAYN,EAAYC,GAE/C,OADmBO,GAAcuB,EAAS,MAoB5BC,CAAc1B,GAAYN,GACtCe,EAAe,YAAIe,OAEpB,CAACL,IAGF,oBACE9Q,UAAWiB,IAAW,CACpB,YAAaqC,EAAK6E,SAClBmJ,SAAUhO,EAAKgO,SACfC,OAAQjO,EAAKqG,UAAY2G,IAJ7B,SAOE,eAACM,EAAD,yBACE5Q,UAAU,4BACVqN,OAAQ/J,EAAKkO,OAAS,cAAWtQ,IAEN,IAAtBoC,EAAKuN,aACN,CACEnF,KAAMpI,EAAKqG,SAAW,KAExB,CACEyE,GAAI9K,EAAKqG,SAAW,IACpB8H,SAAU,SAAC3B,EAAOgB,GAChB,IAAKhB,EACH,OAAO,EAGLA,EAAM4B,KAAqB,KAAd5B,EAAM4B,KAAc5B,EAAM4B,MAAQpO,EAAKqG,UACtDgH,EAAoBrN,EAAKqG,YAhBrC,IAqBEgC,QAAS,SAAAnK,GACF8B,EAAKqG,QAAQrH,QAChBd,EAAE2J,iBAEJuF,EArDiB,SAAA/G,GACvB,IAAMyH,EAAU1B,GAAOC,GAAYhG,EAASmG,GAC5CW,EAAkBnN,EAAK+I,GAAI+E,GAmDRO,CAAiBrO,EAAKqG,UA9CzCyG,EAAe,IACfvB,EAAa,MAoBX,UA4BGvL,EAAKhD,KACN,sBAAMN,UAAU,0BAAhB,SAA2CsD,EAAKqL,QAE/CrL,EAAKsO,OAAStO,EAAK9C,UAClB,cAACqR,GAAA,EAAD,CAAO7R,UAAU,eAAeD,MAAOuD,EAAKsO,MAAOhQ,MAAI,EAAvD,SACG0B,EAAK9C,YAEN,Y,UC6BGsR,GAhIc,SAAC,GAavB,IA4DsBzF,EAxE3B/I,EAYI,EAZJA,KACA+M,EAWI,EAXJA,YACAD,EAUI,EAVJA,eACAE,EASI,EATJA,WACAC,EAQI,EARJA,cACAC,EAOI,EAPJA,UACA3B,EAMI,EANJA,aACA6B,EAKI,EALJA,WACA1H,EAII,EAJJA,cACA8F,EAGI,EAHJA,UACAQ,EAEI,EAFJA,YACAqB,EACI,EADJA,kBAGMtB,EAAa0B,cAAcC,SA2B3BP,EAAoB,SAACnN,EAAMoN,GAC/B,IACIqB,EADAC,EAAY3B,EAGZK,GACFqB,EAAalC,GAAca,EAAY,MACvCsB,EAAYD,GAEZC,EAAUC,SAAS3O,GAAQ0O,EAAUE,OAAOF,EAAUG,QAAQ7O,GAAO,GAAK0O,EAAUvQ,KAAK6B,GAI3F,IAAM8O,EAAU5B,EAAU/I,QAAO,SAAA4K,GAAG,OAAKL,EAAUC,SAASI,MAC5DxD,EAAa,YAAIuD,IAGjBhC,EAAe,YAAI4B,KAIfM,EAAkB,SAAC9Q,EAAG8B,GACrB+M,GAAeA,EAAY4B,SAAS3O,EAAK+I,KAAQkD,GAAiBjM,EAAK6E,SAAUkH,EAAYC,GAChGmB,EAAkBnN,EAAK+I,IA9CH,SAAC/I,EAAMoN,GAC7B,IACIqB,EADAK,EAAU5B,EAGVE,IACFqB,EAAalC,GAAca,EAAY,OAC5B6B,MAIT/B,GAAauB,GAAcvB,EAAU,KAAOuB,EAAW,GACzDvB,EAAUyB,SAAS3O,GAAQ8O,EAAQF,OAAOE,EAAQD,QAAQ7O,GAAO,GAAK8O,EAAQ3Q,KAAK6B,IAEnF8O,EAAU,GACL5B,EAAUyB,SAAS3O,IACtB8O,EAAQ3Q,KAAK6B,IAKjBuL,EAAa,YAAIuD,IA4BfI,CAAgBlP,EAAK+I,GAAIqE,GAG3BlP,EAAE2J,kBAgBJ,OACE,qBACEnL,UAAWiB,IAAW,mBAAoB,CACxCwK,MAfqBY,EAeI/I,EAAK+I,GAd7BrD,GAAiB8F,IAAgC,IAAlB9F,KAC9BqH,EAAY4B,SAAS5F,KAAOmE,EAAUyB,SAAS3O,EAAK+I,WAAxD,IAGSgE,EAAY4B,SAAS5F,KAAOrD,IAA+B,IAAd8F,IAG/C,MAQL,sBAAuBuB,EAAY4B,SAAS3O,EAAK+I,IACjD,uBAAwBgE,EAAY4B,SAAS3O,EAAK+I,KAAOmE,EAAUyB,SAAS3O,EAAK+I,MAJrF,UAOE,eAAC,IAAD,CAAMrM,UAAU,4BAA4BoO,GAAG,IAAIzC,QAAS,SAAAnK,GAAC,OAAI8Q,EAAgB9Q,EAAG8B,IAApF,UACGA,EAAKhD,KACN,sBAAMN,UAAU,2BAAhB,SAA4CsD,EAAKqL,QAEhDrL,EAAKsO,OAAStO,EAAK9C,UAClB,cAACqR,GAAA,EAAD,CAAO7R,UAAU,eAAeD,MAAOuD,EAAKsO,MAAOhQ,MAAI,EAAvD,SACG0B,EAAK9C,YAEN,QAIN,oBAAIR,UAAU,eAAd,SACE,cAACyS,GAAA,EAAD,CAAUC,OAASrC,GAAeA,EAAY4B,SAAS3O,EAAK+I,KAASmE,GAAaA,EAAUyB,SAAS3O,EAAK+I,IAA1G,SACE,cAACsG,GAAD,CACEC,MAAOtP,EAAK6E,SACZkI,YAAaA,EACbD,eAAgBA,EAChBI,UAAWA,EACX3B,aAAcA,EACd4B,kBAAmBA,EACnBC,WAAYpN,EACZ0F,cAAeA,EACf8F,UAAWA,EACXQ,YAAaA,EACbqB,kBAAmBA,EACnBL,WAAYA,EACZC,cAAeA,Y,UCzHZsC,GATsB,SAAC,GAAqB,IAAnBvP,EAAkB,EAAlBA,KAAkB,EAAZ4I,MAC5C,OACE,qBAAIlM,UAAU,oBAAd,UACE,+BAAOsD,EAAKwP,SACZ,cAAC,KAAD,CAAgB9S,UAAU,gCCmBjB+S,GAlBc,SAAAlT,GAE3B,IAAMmT,EAAa,CACjBH,gCACAf,wBACA3B,wBAUF,OANuBtQ,EAAM+S,MAAM5G,KAAI,SAAC1I,EAAM4I,GAC5C,IAAM+G,EAAUD,EJV+B,SAAA1P,GACjD,OAAIA,EAAKwP,OAAe,+BACpBxP,EAAK6E,SAAiB,uBACnB,sBIOsB+K,CAAwB5P,IAEnD,OAAO,cAAC2P,EAAD,aAAsC3P,KAAMA,GAAUzD,GAAxCyD,EAAK+I,IAAM/I,EAAKwP,YC6E1BK,GAnFC,SAAAtT,GAEd,IAAQmJ,EAA8DnJ,EAA9DmJ,cAAesG,EAA+CzP,EAA/CyP,YAAa8D,EAAkCvT,EAAlCuT,KAAMzC,EAA4B9Q,EAA5B8Q,kBAAmB/M,EAAS/D,EAAT+D,KAG7D,EAAkCP,mBAAS,IAA3C,mBAAOmN,EAAP,KAAkB3B,EAAlB,KACA,EAAsCxL,mBAAS,IAA/C,mBAAOgN,EAAP,KAAoBD,EAApB,KACA,EAAoC/M,mBAAS,MAA7C,mBAAOiN,EAAP,KAAmBC,EAAnB,KAGA,EAAkClN,oBAAS,GAA3C,mBAAOyL,EAAP,KAAkBuE,EAAlB,KAGMC,EAAYC,iBAAO,MAsBzB,OACE,cAAC,WAAD,UACE,qBACEvT,UAAWiB,IAAW,kDAAmD,CACvEuS,SAAU1E,IAA+B,IAAlB9F,EACvB,aAAuB,cAATpF,GAAiC,SAATA,EACtC,YAAsB,cAATA,GAAiC,SAATA,IAEvC6P,aA3Be,WACfzK,GACFqK,GAAa,IA0BXK,aAAc,kBAAML,GAAa,IAPnC,SASGD,EACCA,EAAKvT,GAEL,eAAC,WAAD,WAEE,cAAC,GAAD,aAAoBgP,aAAcA,EAAcC,UAAWA,GAAejP,IAE1E,qBAAKG,UAAU,gBAAgBF,IAAKwT,IAEpC,cAAC,IAAD,CACEtT,UAAU,oBACV0M,QAAS,CAAEiH,kBAAkB,GAC7BC,UAAW,SAAAC,GAAS,OAnCb,SAAAA,GACbP,GAAaO,EAAUC,UAAY,EAChCR,EAAUrD,QAAQ5L,UAAU0P,SAAS,YACxCT,EAAUrD,QAAQ5L,UAAUE,IAAI,WAG9B+O,EAAUrD,QAAQ5L,UAAU0P,SAAS,YACvCT,EAAUrD,QAAQ5L,UAAUC,OAAO,WA4BL0P,CAAWH,IAHrC,SAKE,oBAAI7T,UAAU,6BAAd,SACE,cAAC2S,GAAD,CACEC,MAAOjD,GACPU,YAAaA,EACbD,eAAgBA,EAChBE,WAAYA,EACZC,cAAeA,EACfC,UAAWA,EACX3B,aAAcA,EACdS,YAAaA,EACbtG,cAAeA,EACf8F,UAAWA,EACX6B,kBAAmBA,gBC/ExBsD,GAAS,WAEpB,IAAM7O,EAAWoD,cACX0B,EAAQxB,aAAY,SAAAC,GAAK,OAAIA,EAAMhF,OAAOuQ,SA0BhD,OAZAjQ,qBAAU,WAER,IAAMC,EAAUC,SAASgQ,qBAAqB,QAAQ,GAGlDjK,EACFhG,EAAQkQ,aAAa,MAAO,OAE5BlQ,EAAQkQ,aAAa,MAAO,SAE7B,CAAClK,IAEG,CAACA,EAvBS,SAAAxF,GACf,IAEE,IAAMC,EAAeD,aAAiBE,SAAWF,EAAMwF,GAASxF,EAChEU,EnBPmB,SAAAV,GAAK,OAAI,SAAAU,GAAQ,OAAIA,EAAS,CAAEC,KAAM,aAAcX,WmBO9D2P,CAAU1P,IACnB,MAAOd,GAEPC,QAAQC,IAAIF,OCdLyQ,GAAgB,WAE3B,MAAoCjR,oBAAS,WAC3C,IACE,OAAOK,IAAYC,OAAOkF,OAAOxD,KACjC,MAAOxB,GAGP,OADAC,QAAQC,IAAIF,GACLH,IAAYC,OAAOkF,OAAOxD,SANrC,mBAAOgF,EAAP,KAAmBC,EAAnB,KAwBA,MAAO,CAACD,EAbS,SAAA3F,GACf,IAEE,IAAMC,EAAeD,aAAiBE,SAAWF,EAAM2F,GAAc3F,EAGrE4F,EAAc3F,GACd,MAAOd,GAEPC,QAAQC,IAAIF,OCtBL0Q,GAAgB,WAE3B,MAAoClR,oBAAS,WAC3C,IACE,OAAOK,IAAYC,OAAO6Q,OAAOnP,KACjC,MAAOxB,GAGP,OADAC,QAAQC,IAAIF,GACLH,IAAYC,OAAO6Q,OAAOnP,SANrC,mBAAOkF,EAAP,KAAmBC,EAAnB,KAwBA,MAAO,CAACD,EAbS,SAAA7F,GACf,IAEE,IAAMC,EAAeD,aAAiBE,SAAWF,EAAM6F,GAAc7F,EAGrE8F,EAAc7F,GACd,MAAOd,GAEPC,QAAQC,IAAIF,OCtBL4Q,GAAiB,WAE5B,MAAsCpR,oBAAS,WAC7C,IACE,OAAOK,IAAYC,OAAOkF,OAAO6L,gBACjC,MAAO7Q,GAGP,OADAC,QAAQC,IAAIF,GACLH,IAAYC,OAAOkF,OAAO6L,oBANrC,mBAAOjK,EAAP,KAAoBC,EAApB,KAwBA,MAAO,CAACD,EAbS,SAAA/F,GACf,IAEE,IAAMC,EAAeD,aAAiBE,SAAWF,EAAM+F,GAAe/F,EAGtEgG,EAAe/F,GACf,MAAOd,GAEPC,QAAQC,IAAIF,OC0MH8Q,I,cApMQ,SAAA9U,GAErB,IAAQsI,EAAmEtI,EAAnEsI,SAAUU,EAAyDhJ,EAAzDgJ,OAAgBuK,GAAyCvT,EAAjD2U,OAAiD3U,EAAzCuT,MAAM9D,EAAmCzP,EAAnCyP,YAAaqB,EAAsB9Q,EAAtB8Q,kBAGrD,EAAwBvN,cAAxB,mBAAOQ,EAAP,KAAaI,EAAb,KACA,EAA0BiQ,KAA1B,mBAAO/J,EAAP,KAAcC,EAAd,KACA,EAAoCmK,KAApC,mBAAOjK,EAAP,KAAmBC,EAAnB,KACA,EAAoCiK,KAApC,mBAAOhK,EAAP,KAAmBC,EAAnB,KACA,EAAsCiK,KAAtC,mBAAOhK,EAAP,KAAoBC,EAApB,KAGA,EAAkCrH,oBAAS,GAA3C,mBAAO0G,EAAP,KAAkBC,EAAlB,KACA,EAA4C3G,oBAAS,GAArD,mBAAOuR,EAAP,KAAuBtG,EAAvB,KACA,EAAsCjL,mBAASE,OAAOsR,YAAtD,mBAAOC,EAAP,KAAoBC,GAApB,KAGM3P,GAAWoD,cACXwM,GAActM,aAAY,SAAAC,GAAK,OAAIA,EAAMhF,UAGzCsR,GAAoB,WACxBF,GAAexR,OAAOsR,aAIlB/D,GAAWC,cACXjI,GAAekM,GAAYlM,aAC3BE,GAAgBgM,GAAYhM,cAC5B2B,GAAWqK,GAAY/L,WAGvB6B,GAAmB,SAAAuH,GAAG,OAAIjN,GAAS4C,EAAoBqK,KAS7DpO,qBAAU,WACJ2Q,GAAkBE,EAAc,MAClCxG,GAAkB,KAEnB,CAACwC,KAGJ7M,qBAAU,gBACO/C,IAAXqC,QACFA,OAAO2R,iBAAiB,SAAUD,MAEnC,CAACH,IAGJ7Q,qBAAU,WAER,OADA+F,GAAa,GACN,kBAAMA,GAAa,MACzB,IAGH,IAoBMmL,GAAmC,KAAhB1K,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAKV,EAIH,8CACE/J,UAAWiB,IAAW,2BAAD,OArBI,CAC3BmU,SAAU,kBACVC,OAAQ,gBACRC,OAAQ,gBACRC,OAAQ,iBAkB4ClL,IAAe,kBAD5C,YA3BH,CACpBiL,OAAQ,gBACRD,OAAQ,eACRE,OAAQ,iBAyB8FhL,IAAe,iBAEjH,CAEE,uBAAwBuK,GAAe,KACvC,iBAAkB9L,IAAiB8L,GAAe,KAClD,iBAAkB9L,IAAiB8L,EAAc,KAGjD,wBAAyBA,EAAc,KACvC,aAAcF,GAAkBE,EAAc,KAC9C,YAAaF,GAAkBE,EAAc,QAG5CnK,GAAW,CAAE,WAAY,YAAe,IAhB/C,cAkBIA,GAWE,KAVF,cAAC,GAAD,CACE/G,KAAMA,EACNwP,KAAMA,EACNpK,cAAeA,GACf4L,eAAgBA,EAChB9J,iBAAkBA,GAClBwD,kBAAmBA,EACnBgB,YAAaA,EACbqB,kBAAmBA,IAIvB,cAAC6E,EAAA,EAAD,CACEC,OAAO,KACPC,MAAgB,SAAT9R,EACPY,KAAe,SAATZ,GAAmBuR,GACzBpV,MAAOoV,GAAmB1K,OAAcvJ,EACxClB,UAAWiB,IAAW,2CAAD,OAjDL,CACpBmU,SAAU,eACVC,OAAQ,YACRC,OAAQ,oBACRC,OAAQ,UA8CuDlL,IAAe,eADrD,mBALvB,SASE,qBAAKrK,UAAU,kCAAf,SACG6I,EACCA,EAAO,CAAEyF,oBAAmB1K,OAAMI,YAElC,cAAC,GAAD,CAAiBsK,kBAAmBA,EAAmB1K,KAAMA,EAAMI,QAASA,QAIjFmE,EAGD,qBACEnI,UAAWiB,IAAW,kBAAmB,CACvC0U,KAAMf,IAERjJ,QAAS,kBAAM2C,GAAkB,OAIA,IAAlC5K,IAAYC,OAAOiS,WAClB,cAAC,EAAD,CACEhS,KAAMA,EACNI,QAASA,EACTuG,WAAYA,EACZC,cAAeA,EACfH,WAAYA,EACZC,cAAeA,EACfG,YAAaA,EACbC,eAAgBA,EAChBR,MAAOA,EACPC,SAAUA,EACVxG,OAAQ9D,EAAM8D,OACdyG,UAAWvK,EAAMuK,UACjBO,SAAUA,GACVC,YA3HY,SAAAyH,GAAG,OAAIjN,GAAS6C,EAAiBoK,KA4H7CvJ,aAAcA,GACd+B,gBAhIgB,SAAAwH,GAAG,OAAIjN,GAAS2C,EAAmBsK,KAiInDrJ,cAAeA,GACf8B,iBAAkBA,GAClBxC,WAAYzI,EAAMyI,WAClByC,cAAelL,EAAMkL,cACrBrH,YAAaA,MAEb,MAa8B,IAAjCA,IAAYC,OAAOmQ,UAClB,qBAAK9T,UAAU,gBAAf,SACE,cAAC,IAAD,CAAa6V,UAAW,IAAK1U,MAAO,CAAE2U,OAAQ,MAA9C,SACE,cAACC,EAAA,EAAD,CAAQ/V,UAAU,WAAWD,MAAM,UAAnC,SACE,cAAC,IAAD,CAASI,KAAM,WAInB,SA3GC,OCnGIwU,GAXQ,SAAA9U,GAAK,OAC1B,cAAC,GAAD,2BAIMA,GAJN,aAMGA,EAAMsI,a,UCbI,IACb,CACEkE,GAAI,OACJsC,MAAO,OACPrO,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClBwJ,QAAS,SAEX,CACE0C,GAAI,aACJsC,MAAO,cACPrO,KAAM,cAAC,IAAD,CAAMH,KAAM,KAClBwJ,QAAS,iBCgFEqM,GAhFe,SAAC,GASxB,IARL1S,EAQI,EARJA,KACA2S,EAOI,EAPJA,gBACA7F,EAMI,EANJA,eACAE,EAKI,EALJA,WACAC,EAII,EAJJA,cACAjB,EAGI,EAHJA,YACAqB,EAEI,EAFJA,kBACAuF,EACI,EADJA,QAGMtF,EAAUtN,EAAKuN,aAAe,IAAMpC,IAGpCqC,EAAWC,cACX1B,EAAayB,EAASE,SAEN7B,GAAgB7L,EAAKqG,QAAS0F,EAAYC,GAsBhE,OARArL,qBAAU,WACR,GAA0B,OAAtB0M,EAA4B,CAC9BJ,EAAcI,GACd,IAAMQ,EAdY,SAACxB,EAAYN,GACjC,IAAM+B,EAAU1B,GAAOC,EAAYN,EAAYC,GACzCyC,EAAalC,GAAcuB,EAAS,MAE1C,OADAW,EAAWQ,MACJR,EAUOV,CAAc1B,GAAYN,GACtCe,EAAe,YAAIe,OAEpB,CAACL,IAGF,oBACE9Q,UAAWiB,IAAW,WAAY,CAChCsQ,OAAQjO,EAAKqG,UAAY2G,EACzBgB,SAAUhO,EAAKgO,WAEjB3F,QAjBuB,kBAAMsK,EAAgB,KAY/C,SAOE,eAACrF,EAAD,yBACE5Q,UAAWiB,IAAW,4BAA6B,CACjD,gBAAiBiV,EACjB,YAAaA,IAEfpV,IAAK8P,EACLvD,OAAQ/J,EAAKkO,OAAS,cAAWtQ,IAEN,IAAtBoC,EAAKuN,aACN,CACEnF,KAAMpI,EAAKqG,SAAW,KAExB,CACEyE,GAAI9K,EAAKqG,SAAW,IACpB8H,SAAU,SAAC3B,EAAOgB,GAChB,IAAKhB,EACH,OAAO,EAGLA,EAAM4B,KAAqB,KAAd5B,EAAM4B,KAAc5B,EAAM4B,MAAQpO,EAAKqG,UACtDgH,EAAoBrN,EAAKqG,YApBrC,cA0BGrG,EAAKhD,KACN,+BAAOgD,EAAKqL,e,UC6BLwH,GAvGgB,SAAAtW,GAE7B,IACEyD,EAYEzD,EAZFyD,KACA8S,EAWEvW,EAXFuW,QACA/F,EAUExQ,EAVFwQ,YACAoD,EASE5T,EATF4T,aACAC,EAQE7T,EARF6T,aACA2C,EAOExW,EAPFwW,aACAjG,EAMEvQ,EANFuQ,eACAE,EAKEzQ,EALFyQ,WACAC,EAIE1Q,EAJF0Q,cACAjB,EAGEzP,EAHFyP,YACA2G,EAEEpW,EAFFoW,gBACAtF,EACE9Q,EADF8Q,kBAIItB,EAAa0B,cAAcC,SAG3BsF,EAAgB,CACpBC,aAAc,CACZC,SAAS,EACTC,GAAI,SAAAtR,GACF,IAGeuR,EAHTC,EAAapT,OAAOqT,YACxBC,EAAQ1R,EAAK2R,SAASC,UAAUC,wBAAwBC,IAKtDN,EAAaE,EAJJ1R,EAAK+R,OAAOnV,OAIW,GAAK,IAEvC2U,EAAY,CACVS,UAFUR,EAAaE,EAAQ,GAG/BO,UAAW,SAIf,IAAMC,EAAQlS,EAAK2R,SAASI,OAAOF,wBAOnC,OAJIK,EAAMC,KAAOD,EAAMrV,OAASuB,OAAOsR,WAAa,KAAO,GACzD1P,EAAK2R,SAASI,OAAOK,QAAQ,aAAalT,UAAUE,IAAI,YAGnD,2BACFY,GADL,IAEEqS,OAAO,eACFd,QAMb,OACE,eAACe,GAAA,EAAD,CACE3W,IAAI,KACJd,UAAWiB,IAAW,CACpB,YAAwB,IAAZmV,EACZ,oBAAgC,IAAZA,EACpB,8BACE7G,GAAiBjM,EAAK6E,SAAUkH,EAAYC,IAAgBe,EAAY4B,SAAS3O,EAAK+I,MAE1FqG,OAAQ2D,EAAapE,SAAS3O,EAAK+I,IACnCqL,OAAQ,kBAAMjE,EAAanQ,EAAK+I,KAChCoH,aAAc,kBAAMA,EAAanQ,EAAK+I,KACtCqH,aAAc,kBAAMA,EAAapQ,EAAK+I,KAXxC,UAaE,eAACyB,EAAA,EAAD,CACEM,GAAG,IACHtN,IAAKqN,IACLnO,UAAWiB,IAAW,4CAA6C,CACjE,iBAA6B,IAAZmV,EACjB,YAAwB,IAAZA,IAEdzK,QAAS,SAAAnK,GAAC,OAAIA,EAAE2J,kBAPlB,UASG7H,EAAKhD,KACN,+BAAOgD,EAAKqL,WAEd,cAACX,EAAA,EAAD,CAAclN,IAAI,KAAK6W,UAAWrB,EAAlC,SACE,cAAC,GAAD,CACEF,SAAS,EACT1F,WAAYpN,EACZsP,MAAOtP,EAAK6E,SACZmI,WAAYA,EACZD,YAAaA,EACbf,YAAaA,EACb+G,aAAcA,EACd5C,aAAcA,EACdC,aAAcA,EACdnD,cAAeA,EACfH,eAAgBA,EAChB8F,SAAS,EACTD,gBAAiBA,EACjBtF,kBAAmBA,UCvFdiH,GAjBgB,SAAA/X,GAE7B,IAAMmT,EAAa,CACjBmD,0BACAH,0BAUF,OANuBnW,EAAM+S,MAAM5G,KAAI,SAAC1I,EAAM4I,GAC5C,IAAM+G,EAAUD,EfIiC,SAAA1P,GACnD,OAAIA,EAAK6E,SAAiB,yBACnB,wBeNsB+K,CAAwB5P,IAEnD,OAAO,cAAC2P,EAAD,aAAS3P,KAAMA,EAAM4I,MAAOA,GAAyBrM,GAAbyD,EAAK+I,QCmCzCwL,GA1CQ,SAAC,GAAwC,IAAtClH,EAAqC,EAArCA,kBAAmBrB,EAAkB,EAAlBA,YAE3C,EAAoCjM,mBAAS,MAA7C,mBAAOiN,EAAP,KAAmBC,EAAnB,KACA,EAAsClN,mBAAS,IAA/C,mBAAOgN,EAAP,KAAoBD,EAApB,KACA,EAAwC/M,mBAAS,IAAjD,mBAAOgT,EAAP,KAAqBJ,EAArB,KAgBA,OACE,qBAAKjW,UAAU,qCAAf,SACE,oBAAIA,UAAU,iBAAiBqM,GAAG,uBAAlC,SACE,cAAC,GAAD,CACE+J,SAAS,EACTxD,MAAOjD,GACPW,WAAYA,EACZD,YAAaA,EACbf,YAAaA,EACbmE,aAtBa,SAAApH,GACnB,IAAM8E,EAAMkF,EACZlF,EAAI1P,KAAK4K,GACT4J,EAAgB,YAAI9E,KAoBduC,aAhBa,SAAArH,GACnB,IAAM8E,EAAMkF,EACZlF,EAAIe,OAAOf,EAAIgB,QAAQ9F,GAAK,GAC5B4J,EAAgB,YAAI9E,KAcdkF,aAAcA,EACd9F,cAAeA,EACfH,eAAgBA,EAChB6F,gBAAiBA,EACjBtF,kBAAmBA,SCoKdmH,I,OA/KU,SAAAjY,GAAU,IAAD,EAExBsI,EAAmEtI,EAAnEsI,SAAUU,EAAyDhJ,EAAzDgJ,OAAQ2L,EAAiD3U,EAAjD2U,OAAQpB,EAAyCvT,EAAzCuT,KAAMzC,EAAmC9Q,EAAnC8Q,kBAAmBrB,EAAgBzP,EAAhByP,YAG3D,EAAwBlM,cAAxB,mBAAOQ,EAAP,KAAaI,EAAb,KACA,EAA0BiQ,KAA1B,mBAAO/J,EAAP,KAAcC,EAAd,KACA,EAAoCmK,KAApC,mBAAOjK,EAAP,KAAmBC,EAAnB,KACA,EAAoCiK,KAApC,mBAAOhK,EAAP,KAAmBC,EAAnB,KACA,EAAsCiK,KAAtC,mBAAOhK,EAAP,KAAoBC,EAApB,KAGA,EAAkCrH,oBAAS,GAA3C,mBAAO0G,EAAP,KAAkBC,EAAlB,KACA,EAA4C3G,oBAAS,GAArD,mBAAO0U,EAAP,KAAuBC,EAAvB,KAGM5S,GAAWoD,cACXwM,GAActM,aAAY,SAAAC,GAAK,OAAIA,EAAMhF,UAGzCmF,GAAekM,GAAYlM,aAC3B6B,GAAWqK,GAAY/L,WAe7BhF,qBAAU,WAUR,OATA+F,GAAa,GACbzG,OAAO2R,iBAAiB,UAAU,WAC5B3R,OAAO0U,YAAc,KAAyB,IAAnBF,GAC7BC,GAAkB,GAEhBzU,OAAO0U,YAAc,IACvBD,GAAkB,MAGf,kBAfPhO,GAAa,QACbgO,GAAkB,MAejB,IAGH,IAAME,GAAgB,CACpB5C,OAAQ,gBACRD,OAAQ,eACRE,OAAQ,iBASJ4C,GAAgB,CACpB/C,SAAU,eACVC,OAAQ,aAGJF,GAAmC,KAAhB1K,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAKV,EAKH,8CACE/J,UAAWiB,IAAW,6CAAD,OAnBI,CAC3BmU,SAAU,kBACVC,OAAQ,gBACRC,OAAQ,iBAiB8DjL,IAAe,kBAD9D,YACmF6N,GAAc3N,IAAe,gBADhH,oBAIhBI,GAAW,CAAE,WAAY,YAAe,IAL/C,cAOE,eAAC6K,EAAA,EAAD,CACEC,OAAO,KACPzV,UAAWiB,IAAW,kFAAmF,CACvG,kBAAmB8W,IAHvB,WAMIlP,GACA,qBAAK7I,UAAU,kCAAf,SACE,oBAAIA,UAAU,iBAAd,SACE,cAACwO,GAAA,EAAD,UACE,eAAC,IAAD,CAAMJ,GAAG,IAAIpO,UAAU,eAAvB,UACE,sBAAMA,UAAU,aAAhB,SACE,qBAAK6B,IAAK6B,IAAYsL,IAAIC,aAAcnN,IAAI,WAE9C,oBAAI9B,UAAU,kBAAd,SAAiC0D,IAAYsL,IAAIE,mBAO3D,qBAAKlP,UAAU,kCAAf,SACG6I,EAASA,EAAO,CAAEjF,OAAMI,YAAa,cAAC,GAAD,CAAiBJ,KAAMA,EAAMI,QAASA,SAG9E2G,GAmBE,KAlBF,qBAAK3K,UAAU,0BAAf,SACE,cAACwV,EAAA,EAAD,CACE1U,IAAI,MACJ2U,OAAO,KACPC,MAAgB,SAAT9R,EACPY,KAAe,SAATZ,GAAmBuR,GACzBnV,UAAWiB,IAAW,6DAAD,mBAClBkX,GAAc9N,GAA6B,WAAfA,GADV,cAEnB,gBAAkB8N,GAAc9N,IAA8B,WAAfA,GAA2C,aAAfA,GAFxD,IALvB,SAUG+I,EACCA,EAAK,CAAE9D,cAAaqB,sBAEpB,cAAC,GAAD,CAAerB,YAAaA,EAAaqB,kBAAmBA,QAMnExI,GACkC,IAAlCzE,IAAYC,OAAOiS,WAClB,cAAC,EAAD,CACEhS,KAAMA,EACNI,QAASA,EACTuG,WAAYA,EACZC,cAAeA,EACfH,WAAYA,EACZC,cAAeA,EACfG,YAAaA,EACbC,eAAgBA,EAChBR,MAAOA,EACPC,SAAUA,EACVxG,OAAQ9D,EAAM8D,OACdyG,UAAWvK,EAAMuK,UACjBO,SAAUA,GACVC,YApHY,SAAAyH,GAAG,OAAIjN,GAAS6C,EAAiBoK,KAqH7CvJ,aAAcA,GACd+B,gBAzHgB,SAAAwH,GAAG,OAAIjN,GAAS2C,EAAmBsK,KA0HnD/J,WAAYzI,EAAMyI,WAClByC,cAAelL,EAAMkL,cACrBrH,YAAaA,MAEb,KACJ,wBACE1D,UAAWiB,IAAW,uBAAD,OAAwBiX,GAAc3N,IAAe,iBAAmB,CAC3F,SAAyB,WAAfA,IAFd,SAKGiK,EACCA,EAAO,CAAEjK,aAAY2N,mBAErB,cAAC,EAAD,CAAiB3N,WAAYA,EAAY2N,cAAeA,QAI1B,IAAjCxU,IAAYC,OAAOmQ,UAClB,qBAAK9T,UAAU,gBAAf,SACE,cAAC,IAAD,CAAa6V,UAAW,IAAK1U,MAAO,CAAE2U,OAAQ,MAA9C,SACE,cAACC,EAAA,EAAD,CAAQ/V,UAAU,WAAWD,MAAM,UAAnC,SACE,cAAC,IAAD,CAASI,KAAM,WAInB,SArGC,OCpFI2X,GAXU,SAAAjY,GAAK,OAC5B,cAAC,GAAD,2BAIMA,GAJN,aAMGA,EAAMsI,aCgNIiQ,GAvMA,WAEb,MCpBuB,WAEvB,MAAoC/U,mBAAS,MAA7C,mBAAOgV,EAAP,KAAmBC,EAAnB,KACA,EAA4BjV,oBAAS,WACnC,IACE,OAAOK,IAAYC,OAAO0B,KAC1B,MAAOxB,GAGP,OADAC,QAAQC,IAAIF,GACLH,IAAYC,OAAO0B,SAN9B,mBAAO1B,EAAP,KAAeyG,EAAf,KAwBMmO,EAAe,WAEJ,eAAX5U,GAA2BJ,OAAOsR,YAAc,OAClDzK,EAAU,YACVkO,EAAc,eAGG,eAAfD,GAA+B9U,OAAOsR,YAAc,MACtDzK,EAAU,eAcd,OATAnG,qBAAU,WACRsU,MACC,IAEHtU,qBAAU,WAERV,OAAO2R,iBAAiB,SAAUqD,KACjC,CAAC5U,EAAQ0U,IAEL,CAAC1U,EAnCS,SAAAe,GACf,IAEE,IAAMC,EAAeD,aAAiBE,SAAWF,EAAMf,GAAUe,EAGjE0F,EAAUzF,GACV,MAAOd,GAEPC,QAAQC,IAAIF,MDHY2U,GAA5B,mBAAO7U,EAAP,KAAeyG,EAAf,KACA,EErBiC,WAEjC,MAAoC/G,oBAAS,WAC3C,IACE,OAAOK,IAAYC,OAAO8U,iBAC1B,MAAO5U,GAGP,OADAC,QAAQC,IAAIF,GACLH,IAAYC,OAAO8U,qBAN9B,mBAAOnQ,EAAP,KAAmByC,EAAnB,KAwBA,MAAO,CAACzC,EAbS,SAAA5D,GACf,IAEE,IAAMC,EAAeD,aAAiBE,SAAWF,EAAM4D,GAAc5D,EAGrEqG,EAAcpG,GACd,MAAOd,GAEPC,QAAQC,IAAIF,MFDoB6U,GAApC,mBAAOpQ,EAAP,KAAmByC,EAAnB,KAMM4N,GAHUC,qBAAWC,KAGM,eAAXlV,EAA0B,mBAAqB,kBAG/DmV,EAAU,CAAEhP,cAAa6K,kBAAgBmD,qBAuBzCiB,EAAgBzP,gBAAK,kBAAM,kCAG3B0P,EAAQ1P,gBAAK,kBAAM,iCA4HzB,OACE,cAAC,IAAD,CAAW2P,SAAUC,GAArB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CACExP,OAAK,EACLN,KAAK,aACL+P,OAAQ,WACN,OAAO5W,cAAmB,cAAC,IAAD,CAAU6L,GAAIxE,IAAmB,cAAC,IAAD,CAAUwE,GAAG,cAI5E,cAAC,IAAD,CACE1E,OAAK,EACLN,KAAK,IACL+P,OAAQ,WACN,OAAO5W,cAAmB,cAAC,IAAD,CAAU6L,GAAIxE,IAAmB,cAAC,IAAD,CAAUwE,GAAG,cAI5E,cAAC,IAAD,CACE1E,OAAK,EACLN,KAAK,kBACL+P,OAAQ,SAAAtZ,GAAK,OACX,cAACiZ,EAAQhP,YAAT,UACE,cAACiP,EAAD,SA5GH3W,OAAOC,KAAKyW,GAAS9M,KAAI,SAACrI,EAAQuI,GAIvC,IAAMkN,EAAYN,EAAQnV,GAG1B,EApEyB,SAAAA,GAC3B,IAAM0V,EAAe,GACfC,EAAc,GAYpB,OAVIzP,GACFA,EAAOpC,QAAO,SAAA8R,IAERA,EAAM5V,SAAWA,QAA4BzC,IAAjBqY,EAAM5V,QAAwBgV,IAAkBhV,KAC9E0V,EAAa5X,KAAK8X,GAClBD,EAAY7X,KAAK8X,EAAMnQ,UAKtB,CAAEiQ,eAAcC,eAsDiBE,CAAqB7V,GAAnD0V,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,YAQhBhK,EAAc,GAEpB,OACE,cAAC,IAAD,CAAOlG,KAAMkQ,EAAb,SACE,cAACF,EAAD,CACE9J,YAAaA,EACb3L,OAAQA,EACRyG,UAAWA,EACX9B,WAAYA,EACZyC,cAAeA,EACf4F,kBAzFgB,KAmFlB,SAQE,cAAC,IAAD,UACG0I,EAAarN,KAAI,SAAAuN,GAChB,OACE,cAAC,IAAD,CAEEnQ,KAAMmQ,EAAMnQ,KACZM,OAAuB,IAAhB6P,EAAM7P,MACbyP,OAAQ,SAAAtZ,GAON,OALAuC,OAAOqX,OAAOnK,EAAdlN,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACKvC,GADL,IAEE0J,KAAMgQ,EAAMhQ,QAIZ,cAAC,WAAD,CAAUmQ,SAAU,KAApB,SAEE,cAAC,EAAD,iDACE/V,OAAQgV,EACRrQ,WAAYA,EACZyC,cAAeA,GAGVwO,EAAMnR,UACP,CACAA,UAAWmR,EAAMnR,WAEjB,IACCmR,EAAMhQ,KACP,CACAhB,UAAWgR,EAAMhQ,MAEjB,IACCgQ,EAAMvZ,UACP,CACAqI,aAAckR,EAAMvZ,WAEpB,IApBN,aAuBE,cAACuZ,EAAMlQ,UAAP,eAAqBxJ,WApCxB0Z,EAAMnQ,cAbQ8C,MAgG/B,cAAC,IAAD,CAAO9C,KAAK,IAAIC,UAAW2P,IA7B7B,UGvLSW,UAFH,SAAA9Z,GAAK,OAAI,cAAC,GAAD","file":"static/js/15.6513cb6d.chunk.js","sourcesContent":["// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n","// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\n\nconst config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n","// ** Auth Endpoints\r\nexport default {\r\n  loginEndpoint: '/jwt/login',\r\n  registerEndpoint: '/jwt/register',\r\n  refreshEndpoint: '/jwt/refresh-token',\r\n  logoutEndpoint: '/jwt/logout',\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n","import axios from 'axios'\r\nimport jwtDefaultConfig from './jwtDefaultConfig'\r\n\r\nexport default class JwtService {\r\n  // ** jwtConfig <= Will be used by this service\r\n  jwtConfig = { ...jwtDefaultConfig }\r\n\r\n  // ** For Refreshing Token\r\n  isAlreadyFetchingAccessToken = false\r\n\r\n  // ** For Refreshing Token\r\n  subscribers = []\r\n\r\n  constructor(jwtOverrideConfig) {\r\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\r\n\r\n    // ** Request Interceptor\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        // ** Get token from localStorage\r\n        const accessToken = this.getToken()\r\n\r\n        // ** If token is present add it to request's Authorization Header\r\n        if (accessToken) {\r\n          // ** eslint-disable-next-line no-param-reassign\r\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n        }\r\n        return config\r\n      },\r\n      error => Promise.reject(error)\r\n    )\r\n\r\n    // ** Add request/response interceptor\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // ** const { config, response: { status } } = error\r\n        const { config, response } = error\r\n        const originalRequest = config\r\n\r\n        // ** if (status === 401) {\r\n        if (response && response.status === 401) {\r\n          if (!this.isAlreadyFetchingAccessToken) {\r\n            this.isAlreadyFetchingAccessToken = true\r\n            this.refreshToken().then(r => {\r\n              this.isAlreadyFetchingAccessToken = false\r\n\r\n              // ** Update accessToken in localStorage\r\n              this.setToken(r.data.accessToken)\r\n              this.setRefreshToken(r.data.refreshToken)\r\n\r\n              this.onAccessTokenFetched(r.data.accessToken)\r\n            })\r\n          }\r\n          const retryOriginalRequest = new Promise(resolve => {\r\n            this.addSubscriber(accessToken => {\r\n              // ** Make sure to assign accessToken according to your response.\r\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\r\n              // ** Change Authorization header\r\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n              resolve(this.axios(originalRequest))\r\n            })\r\n          })\r\n          return retryOriginalRequest\r\n        }\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  onAccessTokenFetched(accessToken) {\r\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\r\n  }\r\n\r\n  addSubscriber(callback) {\r\n    this.subscribers.push(callback)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\r\n  }\r\n\r\n  setToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\r\n  }\r\n\r\n  setRefreshToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\r\n  }\r\n\r\n  login(...args) {\r\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\r\n  }\r\n\r\n  register(...args) {\r\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\r\n  }\r\n\r\n  refreshToken() {\r\n    return axios.post(this.jwtConfig.refreshEndpoint, {\r\n      refreshToken: this.getRefreshToken()\r\n    })\r\n  }\r\n}\r\n","// ** Core JWT Import\r\nimport useJwt from '@src/@core/auth/jwt/useJwt'\r\n\r\nconst { jwt } = useJwt({})\r\n\r\nexport default jwt\r\n","// ** JWT Service Import\r\nimport JwtService from './jwtService'\r\n\r\n// ** Export Service as useJwt\r\nexport default function useJwt(jwtOverrideConfig) {\r\n  const jwt = new JwtService(jwtOverrideConfig)\r\n\r\n  return {\r\n    jwt\r\n  }\r\n}\r\n","// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\r\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n  const navbarStore = store.navbar\n  const contentWidth = store.layout.contentWidth\n\n  //** Vars\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [wrapperClass]: wrapperClass,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': !appLayout,\n          'content-area-wrapper': appLayout,\n          'container p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag\n          /*eslint-disable */\n          {...(layout === 'HorizontalLayout' && !appLayout\n            ? { className: classnames({ 'content-body': !appLayout }) }\n            : {})}\n          /*eslint-enable */\n        >\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default LayoutWrapper\n","import { lazy } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Authentication = [\r\n    {\r\n        path: '/login',\r\n        component: lazy(() => import('../../views/authentication/Login')),\r\n        layout: 'BlankLayout',\r\n        meta: {\r\n            authRoute: true\r\n        }\r\n    },\r\n    {\r\n        path: '/register',\r\n        component: lazy(() => import('../../views/authentication/Register')),\r\n        layout: 'BlankLayout',\r\n        meta: {\r\n            authRoute: true\r\n        }\r\n    },\r\n    {\r\n        path: '/forgot-password',\r\n        component: lazy(() => import('../../views/authentication/ForgotPassword')),\r\n        layout: 'BlankLayout',\r\n        meta: {\r\n            authRoute: true\r\n        }\r\n    },\r\n    {\r\n        path: '/reset-password',\r\n        component: lazy(() => import('../../views/authentication/ResetPassword')),\r\n        layout: 'BlankLayout'\r\n    }\r\n]\r\n\r\nexport default Authentication\r\n","import { lazy } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst PagesRoutes = [\r\n    {\r\n        path: '/dashboard',\r\n        component: lazy(() => import('../../views/Dashboard/Dashboard'))\r\n    },\r\n    {\r\n        path: '/roles',\r\n        exact: true,\r\n        component: lazy(() => import('../../views/Roles/list'))\r\n    },\r\n    {\r\n        path: '/roles/permission/:id',\r\n        component: lazy(() => import('../../views/Roles/edit'))\r\n    },\r\n    {\r\n        path: '/wowuser/list',\r\n        component: lazy(() => import('../../views/Users/WowUser/list'))\r\n    },\r\n    {\r\n        path: '/internaluser/list',\r\n        component: lazy(() => import('../../views/Users/WowUser/list'))\r\n    },\r\n    // {\r\n    //   path: '/wowuser/edit',\r\n    //   exact: true,\r\n    //   component: () => <Redirect to='/apps/user/edit/1' />\r\n    // },\r\n    {\r\n        path: '/wowuser/edit/:id',\r\n        component: lazy(() => import('../../views/Users/WowUser/edit')),\r\n        meta: {\r\n            navLink: '/apps/user/edit'\r\n        }\r\n    },\r\n    // {\r\n    //   path: '/wowuser/view',\r\n    //   exact: true,\r\n    //   component: () => <Redirect to='/apps/user/view/1' />\r\n    // },\r\n    {\r\n        path: '/wowuser/view/:id',\r\n        component: lazy(() => import('../../views/Users/WowUser/view')),\r\n        meta: {\r\n            navLink: '/apps/user/view'\r\n        }\r\n    },\r\n    {\r\n        path: '/faq',\r\n        exact: true,\r\n        component: lazy(() => import('../../views/faq'))\r\n    },\r\n    {\r\n        path: '/faq/:id',\r\n        exact: true,\r\n        component: lazy(() => import('../../views/faq/FaqEdit'))\r\n    },\r\n    {\r\n        path: '/error',\r\n        component: lazy(() => import('../../views/Error')),\r\n        layout: 'BlankLayout'\r\n    }\r\n]\r\n\r\nexport default PagesRoutes\r\n","import { lazy } from 'react'\r\nimport Authentication from './Authentication'\r\nimport PagesRoutes from './Pages'\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - WOW Admin'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/dashboard'\r\n\r\n// ** Merge Routes\r\n\r\nconst Routes = [\r\n  ...Authentication,\r\n  ...PagesRoutes\r\n]\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes }\r\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\nconst BlankLayout = ({ children, ...rest }) => {\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div className='blank-page'>\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { Settings, X } from 'react-feather'\nimport { CustomInput, FormGroup } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    setSkin,\n    isRtl,\n    setIsRtl,\n    layout,\n    setLayout,\n    navbarType,\n    setNavbarType,\n    footerType,\n    setFooterType,\n    navbarColor,\n    setNavbarColor,\n    isHidden,\n    setIsHidden,\n    contentWidth,\n    setContentWidth,\n    menuCollapsed,\n    setMenuCollapsed,\n    transition,\n    setTransition\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setSkin(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setNavbarType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={`footer-${radio.name}`}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setFooterType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content'>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Content Width</p>\n            <div className='d-flex'>\n              <CustomInput\n                type='radio'\n                id='full-width'\n                className='mr-1'\n                label='Full Width'\n                checked={contentWidth === 'full'}\n                onChange={() => setContentWidth('full')}\n              />\n              <CustomInput\n                type='radio'\n                id='boxes'\n                label='Boxed'\n                checked={contentWidth === 'boxed'}\n                onChange={() => setContentWidth('boxed')}\n              />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex'>\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='font-weight-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='font-weight-bold'>Menu Layout</p>\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <CustomInput\n                type='radio'\n                id='vertical-layout'\n                label='Vertical'\n                checked={layout === 'VerticalLayout'}\n                onChange={() => setLayout('vertical')}\n                className='mr-1'\n              />\n              <CustomInput\n                type='radio'\n                id='horizontal-layout'\n                label='Horizontal'\n                checked={layout === 'HorizontalLayout'}\n                onChange={() => setLayout('horizontal')}\n              />\n            </div>\n          </FormGroup>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <div className='d-flex align-items-center'>\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\n                <CustomInput\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\n              <CustomInput\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <p className='font-weight-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </FormGroup>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-left d-block d-md-inline-block mt-25'>\n        COPYRIGHT © {new Date().getFullYear()}{' '}\n        <a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\n          Pixinvent\n        </a>\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\n      </span>\n      <span className='float-md-right d-none d-md-block'>\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span>\n    </p>\n  )\n}\n\nexport default Footer\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogout } from '@store/actions/auth'\n\n// ** Third Party Components\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\nconst UserDropdown = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** State\n  const [userData, setUserData] = useState(null)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  //** Vars\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name font-weight-bold'>{(userData && userData['username']) || 'John Doe'}</span>\n          <span className='user-status'>{(userData && userData.role) || 'Admin'}</span>\n        </div>\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <User size={14} className='mr-75' />\n          <span className='align-middle'>Profile</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <Mail size={14} className='mr-75' />\n          <span className='align-middle'>Inbox</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <CheckSquare size={14} className='mr-75' />\n          <span className='align-middle'>Tasks</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <MessageSquare size={14} className='mr-75' />\n          <span className='align-middle'>Chats</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\n          <Power size={14} className='mr-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport { Fragment } from 'react'\n\nimport UserDropdown from './UserDropdown'\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from 'react-feather'\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none d-flex align-items-center'>\n        <NavItem className='mobile-menu mr-auto'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavItem className='d-none d-lg-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <ul className='nav navbar-nav align-items-center ml-auto'>\n        <UserDropdown />\n      </ul>\n    </Fragment>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <NavbarUser skin={skin} setSkin={setSkin} setMenuVisibility={setMenuVisibility} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","import { Mail, Server, User, Circle, Framer } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'dashboard',\r\n    title: 'Dashboard',\r\n    icon: <Server size={20} />,\r\n    navLink: '/dashboard'\r\n  },\r\n  {\r\n    id: 'role',\r\n    title: 'Role',\r\n    icon: <Mail size={20} />,\r\n    navLink: '/roles'\r\n  },\r\n  {\r\n    id: 'users',\r\n    title: 'User',\r\n    icon: <User size={20} />,\r\n    children: [\r\n      {\r\n        id: 'wowuser',\r\n        title: 'WOW Users',\r\n        icon: <Circle size={12} />,\r\n        navLink: '/wowuser/list'\r\n      },\r\n      {\r\n        id: 'internaluser',\r\n        title: 'Internal User',\r\n        icon: <Circle size={12} />,\r\n        navLink: '/internaluser/list'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 'faq',\r\n    title: 'FAQ',\r\n    icon: <Framer size={20} />,\r\n    navLink: '/faq'\r\n  }\r\n]\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item mr-auto'>\n          <NavLink to='/' className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\n// ** Vertical Menu Array Of Items\nimport navigation from '@src/navigation/vertical'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuLink = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  toggleActiveGroup,\n  parentItem,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  // ** To match path\n  const match = matchPath(currentURL, {\n    path: `${item.navLink}/:param`,\n    exact: true,\n    strict: false\n  })\n\n  // ** Search for current item parents\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    return allParents\n  }\n\n  // ** URL Vars\n  const resetActiveGroup = navLink => {\n    const parents = search(navigation, navLink, match)\n    toggleActiveGroup(item.id, parents)\n  }\n\n  // ** Reset Active & Open Group Arrays\n  const resetActiveAndOpenGroups = () => {\n    setGroupActive([])\n    setGroupOpen([])\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n        onClick={e => {\n          if (!item.navLink.length) {\n            e.preventDefault()\n          }\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  parentItem,\n  menuCollapsed,\n  menuHover,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggles Open Group\n  const toggleOpenGroup = (item, parentItem) => {\n    let openArr = groupOpen\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      allParents.pop()\n    }\n\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\n    } else {\n      openArr = []\n      if (!groupOpen.includes(item)) {\n        openArr.push(item)\n      }\n    }\n\n    // ** Set Open Group\n    setGroupOpen([...openArr])\n  }\n\n  // ** Toggle Active Group\n  const toggleActiveGroup = (item, parentItem) => {\n    let activeArr = groupActive\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      activeArr = allParents\n    } else {\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\n    }\n\n    // ** Set open group removing any activegroup item present in opengroup state\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\n    setGroupOpen([...openArr])\n\n    // **  Set Active Group\n    setGroupActive([...activeArr])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\n      toggleActiveGroup(item.id)\n    } else {\n      toggleOpenGroup(item.id, parentItem)\n    }\n\n    e.preventDefault()\n  }\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            toggleActiveGroup={toggleActiveGroup}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            routerProps={routerProps}\n            currentActiveItem={currentActiveItem}\n            activeItem={activeItem}\n            setActiveItem={setActiveItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuSectionHeader,\n    VerticalNavMenuGroup,\n    VerticalNavMenuLink\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Vertical Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    if (menuCollapsed) {\n      setMenuHover(true)\n    }\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu(props)\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={navigation}\n                  groupActive={groupActive}\n                  setGroupActive={setGroupActive}\n                  activeItem={activeItem}\n                  setActiveItem={setActiveItem}\n                  groupOpen={groupOpen}\n                  setGroupOpen={setGroupOpen}\n                  routerProps={routerProps}\n                  menuCollapsed={menuCollapsed}\n                  menuHover={menuHover}\n                  currentActiveItem={currentActiveItem}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  const isHidden = layoutStore.menuHidden\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n          routerProps={routerProps}\n          currentActiveItem={currentActiveItem}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? (\n            navbar({ setMenuVisibility, skin, setSkin })\n          ) : (\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          menuCollapsed={menuCollapsed}\n          setMenuCollapsed={setMenuCollapsed}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      {/* <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )}\n      </footer> */}\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst VerticalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default VerticalLayout\n","import { Mail, Home } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Second Page',\r\n    icon: <Mail size={20} />,\r\n    navLink: '/second-page'\r\n  }\r\n]\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\n\n// ** Horizontal menu items array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst HorizontalNavMenuLink = ({\n  item,\n  setOpenDropdown,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  routerProps,\n  currentActiveItem,\n  isChild\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\n\n  // ** Get parents of current items\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    allParents.pop()\n    return allParents\n  }\n\n  // ** Remove all items from OpenDropdown array\n  const resetOpenDropdowns = () => setOpenDropdown([])\n\n  // ** On mount update active group array\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames('nav-item', {\n        active: item.navLink === activeItem,\n        disabled: item.disabled\n      })}\n      onClick={resetOpenDropdowns}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        tag={LinkTag}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\n\n// ** Utils\nimport { isNavGroupActive } from '@layouts/utils'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const {\n    item,\n    submenu,\n    groupActive,\n    onMouseEnter,\n    onMouseLeave,\n    openDropdown,\n    setGroupActive,\n    activeItem,\n    setActiveItem,\n    routerProps,\n    setOpenDropdown,\n    currentActiveItem\n  } = props\n\n  // ** URL Var\n  const currentURL = useLocation().pathname\n\n  // ** Dropdown menu modifiers\n  const menuModifiers = {\n    setMaxHeight: {\n      enabled: true,\n      fn: data => {\n        const pageHeight = window.innerHeight,\n          ddTop = data.instance.reference.getBoundingClientRect().top,\n          ddHeight = data.popper.height\n        let maxHeight, stylesObj\n\n        // ** Calculate and set height\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\n          maxHeight = pageHeight - ddTop - 25\n          stylesObj = {\n            maxHeight,\n            overflowY: 'auto'\n          }\n        }\n\n        const ddRef = data.instance.popper.getBoundingClientRect()\n\n        // ** If there is not space left to open sub menu open it to the right\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\n        }\n\n        return {\n          ...data,\n          styles: {\n            ...stylesObj\n          }\n        }\n      }\n    }\n  }\n  return (\n    <Dropdown\n      tag='li'\n      className={classnames({\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active':\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\n      })}\n      isOpen={openDropdown.includes(item.id)}\n      toggle={() => onMouseEnter(item.id)}\n      onMouseEnter={() => onMouseEnter(item.id)}\n      onMouseLeave={() => onMouseLeave(item.id)}\n    >\n      <DropdownToggle\n        to='/'\n        tag={Link}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n        onClick={e => e.preventDefault()}\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </DropdownToggle>\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\n        <HorizontalNavMenuItems\n          submenu={true}\n          parentItem={item}\n          items={item.children}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          openDropdown={openDropdown}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          isChild={true}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Horizontal Menu Array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\n  // ** States\n  const [activeItem, setActiveItem] = useState(null)\n  const [groupActive, setGroupActive] = useState([])\n  const [openDropdown, setOpenDropdown] = useState([])\n\n  // ** On mouse enter push the ID to openDropdown array\n  const onMouseEnter = id => {\n    const arr = openDropdown\n    arr.push(id)\n    setOpenDropdown([...arr])\n  }\n\n  // ** On mouse leave remove the ID to openDropdown array\n  const onMouseLeave = id => {\n    const arr = openDropdown\n    arr.splice(arr.indexOf(id), 1)\n    setOpenDropdown([...arr])\n  }\n\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems\n          submenu={false}\n          items={navigation}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          openDropdown={openDropdown}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? (\n              menu({ routerProps, currentActiveItem })\n            ) : (\n              <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />\n            )}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst HorizontalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default HorizontalLayout\n","// ** React Imports\r\nimport { Suspense, useContext, lazy } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n      return <Redirect to='/misc/not-authorized' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                appLayout: route.appLayout\r\n                              }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                routeMeta: route.meta\r\n                              }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                wrapperClass: route.className\r\n                              }\r\n                              : {})}\r\n                          /*eslint-enable */\r\n                          >\r\n                            <route.component {...props} />\r\n                            {/* <FinalRoute route={route} {...props} /> */}\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* for Git Page */}\r\n        <Route\r\n          exact\r\n          path='/Wow-Admin'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        />\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />/\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = props => <Router />\r\n\r\nexport default App\r\n"],"sourceRoot":""}