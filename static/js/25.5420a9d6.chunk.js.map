{"version":3,"sources":["views/Users/WowUser/store/action/index.js","views/Users/WowUser/edit/Social.js","views/Users/WowUser/edit/Account.js","views/Users/WowUser/edit/Information.js","views/Users/WowUser/edit/index.js"],"names":["getAllData","dispatch","a","axios","get","then","response","type","data","getData","params","users","totalPages","total","getUser","id","selectedUser","user","catch","err","console","log","addUser","getState","post","UserSocialTab","Form","onSubmit","e","preventDefault","Row","Col","lg","md","sm","Label","for","FormGroup","tag","InputGroup","className","InputGroupAddon","addonType","InputGroupText","size","Input","placeholder","defaultValue","Button","color","outline","UserAccountTab","useState","img","setImg","userData","setUserData","useEffect","avatar","length","undefined","Media","Math","floor","random","initials","content","fullName","contentStyles","borderRadius","fontSize","width","height","style","src","alt","renderUserAvatar","body","Ripple","hidden","onChange","reader","FileReader","files","target","onload","result","readAsDataURL","accept","username","email","name","status","value","role","company","Table","borderless","striped","responsive","CustomInput","label","defaultChecked","UserInfoTab","setData","useForm","defaultValues","gender","dob","register","errors","handleSubmit","control","setValue","trigger","as","Flatpickr","options","dateFormat","classnames","Cleave","phone","phoneRegionCode","mobileNumber","invalid","render","props","inline","innerRef","required","address1","postcode","state","country","UserEdit","activeTab","setActiveTab","store","useSelector","useDispatch","useParams","toggle","tab","parseInt","Card","CardBody","Nav","pills","NavItem","NavLink","active","onClick","TabContent","TabPane","tabId","Account","Social","Alert","to"],"mappings":"6TAGaA,EAAa,WACxB,8CAAO,WAAMC,GAAN,SAAAC,EAAA,sEACCC,IAAMC,IAAI,4BAA4BC,MAAK,SAAAC,GAC/CL,EAAS,CACPM,KAAM,eACNC,KAAMF,EAASE,UAJd,2CAAP,uDAWWC,EAAU,SAAAC,GACrB,8CAAO,WAAMT,GAAN,SAAAC,EAAA,sEACCC,IAAMC,IAAI,uBAAwBM,GAAQL,MAAK,SAAAC,GACnDL,EAAS,CACPM,KAAM,WACNC,KAAMF,EAASE,KAAKG,MACpBC,WAAYN,EAASE,KAAKK,MAC1BH,cANC,2CAAP,uDAaWI,EAAU,SAAAC,GACrB,8CAAO,WAAMd,GAAN,SAAAC,EAAA,sEACCC,IACHC,IAAI,kBAAmB,CAAEW,OACzBV,MAAK,SAAAC,GACJL,EAAS,CACPM,KAAM,WACNS,aAAcV,EAASE,KAAKS,UAG/BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MATvB,2CAAP,uDAcWG,EAAU,SAAAL,GACrB,OAAO,SAAChB,EAAUsB,GAChBpB,IACGqB,KAAK,uBAAwBP,GAC7BZ,MAAK,SAAAC,GACJL,EAAS,CACPM,KAAM,WACNU,YAGHZ,MAAK,WACJJ,EAASQ,EAAQc,IAAWZ,MAAMD,SAClCT,EAASD,QAEVkB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,S,0PC2DjBM,EAtGO,WACpB,OACE,cAACC,EAAA,EAAD,CAAMC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAvB,SACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,qBACA,eAACC,EAAA,EAAD,CAAWC,IAAKC,IAAYC,UAAU,oBAAtC,UACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAASC,KAAM,SAGnB,cAACC,EAAA,EAAD,CACE9B,GAAG,UACH+B,YAAY,2BACZC,aAAa,iDAInB,eAAChB,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,sBACA,eAACC,EAAA,EAAD,CAAWC,IAAKC,IAAYC,UAAU,oBAAtC,UACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAUC,KAAM,SAGpB,cAACC,EAAA,EAAD,CACE9B,GAAG,WACH+B,YAAY,4BACZC,aAAa,kDAInB,eAAChB,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,uBACA,eAACC,EAAA,EAAD,CAAWC,IAAKC,IAAYC,UAAU,oBAAtC,UACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAWC,KAAM,SAGrB,cAACC,EAAA,EAAD,CACE9B,GAAG,YACH+B,YAAY,6BACZC,aAAa,oDAKnB,eAAChB,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,oBACA,eAACC,EAAA,EAAD,CAAWC,IAAKC,IAAYC,UAAU,oBAAtC,UACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAQC,KAAM,SAGlB,cAACC,EAAA,EAAD,CAAO9B,GAAG,SAAS+B,YAAY,0BAA0BC,aAAa,0CAI1E,eAAChB,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,qBACA,eAACC,EAAA,EAAD,CAAWC,IAAKC,IAAYC,UAAU,oBAAtC,UACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAASC,KAAM,SAGnB,cAACC,EAAA,EAAD,CACE9B,GAAG,UACH+B,YAAY,2BACZC,aAAa,+CAKnB,eAAChB,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,eAACC,EAAA,EAAD,CAAWC,IAAKC,IAAYC,UAAU,oBAAtC,UACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAOC,KAAM,SAGjB,cAACC,EAAA,EAAD,CAAO9B,GAAG,QAAQ+B,YAAY,yBAAyBC,aAAa,0BAIxE,eAAChB,EAAA,EAAD,CAAKS,UAAU,sCAAsCN,GAAG,KAAxD,UACE,cAACc,EAAA,EAAD,CAAQR,UAAU,4BAA4BS,MAAM,UAApD,0BAGA,cAACD,EAAA,EAAD,CAAQC,MAAM,YAAYC,SAAO,EAAjC,4B,+DC8JKC,EAjQQ,SAAC,GAAsB,IAApBnC,EAAmB,EAAnBA,aAExB,EAAsBoC,mBAAS,MAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAaAC,qBAAU,WACR,GAAqB,OAAjBzC,GAA2C,OAAjBA,GAAsC,OAAbuC,GAAqBvC,EAAaD,KAAOwC,EAASxC,GAEvG,OADAyC,EAAYxC,GACRA,EAAa0C,OAAOC,OACfL,EAAOtC,EAAa0C,QAEpBJ,EAAO,QAGjB,CAACtC,IAuCJ,OAAiB,OAAbuC,QAAkCK,IAAbL,EAChB,KAGL,eAACzB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKG,GAAG,KAAR,SACE,eAAC2B,EAAA,EAAD,CAAOrB,UAAU,OAAjB,UA1CiB,WACvB,GAAY,OAARa,EAAc,CAChB,IAEEJ,EADS,CAAC,gBAAiB,eAAgB,gBAAiB,aAAc,gBAAiB,mBAD5Ea,KAAKC,MAAsB,EAAhBD,KAAKE,WAGjC,OACE,cAAC,IAAD,CACEC,UAAQ,EACRhB,MAAOA,EACPT,UAAU,qBACV0B,QAASlD,EAAamD,SACtBC,cAAe,CACbC,aAAc,EACdC,SAAU,aACVC,MAAO,OACPC,OAAQ,QAEVC,MAAO,CACLD,OAAQ,OACRD,MAAO,UAKb,OACE,qBACE/B,UAAU,gDACVkC,IAAKrB,EACLsB,IAAI,sBACJH,OAAO,KACPD,MAAM,OAaHK,GACD,eAACf,EAAA,EAAD,CAAOrB,UAAU,QAAQqC,MAAI,EAA7B,UACE,+BAAK7D,EAAamD,SAAlB,OACA,sBAAK3B,UAAU,6BAAf,UACE,eAACQ,EAAA,EAAO8B,OAAR,CAAe/D,GAAG,aAAauB,IAAKH,IAAOK,UAAU,aAAaS,MAAM,UAAxE,UACE,sBAAMT,UAAU,oBAAhB,oBACA,sBAAMA,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAMI,KAAM,OAEd,uBAAOrC,KAAK,OAAOwE,QAAM,EAAChE,GAAG,aAAaiE,SA1EzC,SAAApD,GACf,IAAMqD,EAAS,IAAIC,WACjBC,EAAQvD,EAAEwD,OAAOD,MACnBF,EAAOI,OAAS,WACd/B,EAAO2B,EAAOK,SAEhBL,EAAOM,cAAcJ,EAAM,KAoEiDK,OAAO,eAEvE,eAACxC,EAAA,EAAO8B,OAAR,CAAe7B,MAAM,YAAYC,SAAO,EAAxC,UACE,sBAAMV,UAAU,oBAAhB,oBACA,sBAAMA,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAQI,KAAM,qBAO1B,cAACb,EAAA,EAAD,CAAKG,GAAG,KAAR,SACE,cAACR,EAAA,EAAD,CAAMC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAvB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAf,SACE,eAACG,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,WAAX,sBACA,cAACS,EAAA,EAAD,CAAOtC,KAAK,OAAOQ,GAAG,WAAW+B,YAAY,WAAWC,aAAcQ,EAASkC,gBAGnF,cAAC1D,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAf,SACE,eAACG,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,OAAX,kBACA,cAACS,EAAA,EAAD,CAAOtC,KAAK,OAAOQ,GAAG,OAAO+B,YAAY,OAAOC,aAAcQ,EAASY,gBAG3E,cAACpC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAf,SACE,eAACG,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACS,EAAA,EAAD,CAAOtC,KAAK,OAAOQ,GAAG,QAAQ+B,YAAY,QAAQC,aAAcQ,EAASmC,aAG7E,cAAC3D,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAf,SACE,eAACG,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,SAAX,oBACA,eAACS,EAAA,EAAD,CAAOtC,KAAK,SAASoF,KAAK,SAAS5E,GAAG,SAASgC,aAAcQ,EAASqC,OAAtE,UACE,wBAAQC,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,8BAIN,cAAC9D,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAf,SACE,eAACG,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,OAAX,kBACA,eAACS,EAAA,EAAD,CAAOtC,KAAK,SAASoF,KAAK,OAAO5E,GAAG,OAAOgC,aAAcQ,EAASuC,KAAlE,UACE,wBAAQD,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,aAAd,gCAIN,cAAC9D,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KAAf,SACE,eAACG,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,UAAX,qBACA,cAACS,EAAA,EAAD,CACEtC,KAAK,OACLQ,GAAG,UACHgC,aAAcQ,EAASwC,QACvBjD,YAAY,qCAIlB,cAACf,EAAA,EAAD,CAAKG,GAAG,KAAR,SACE,sBAAKM,UAAU,0BAAf,UACE,qBAAIA,UAAU,+BAAd,UACE,cAAC,IAAD,CAAMI,KAAM,GAAIJ,UAAU,UAC1B,sBAAMA,UAAU,eAAhB,4BAEF,eAACwD,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,YAAU,EAApC,UACE,uBAAO3D,UAAU,cAAjB,SACE,+BACE,wCACA,sCACA,uCACA,wCACA,6CAGJ,kCACE,+BACE,uCACA,6BACE,cAAC4D,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,UAAUsF,MAAM,GAAGC,gBAAc,MAEnE,6BACE,cAACF,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,UAAUsF,MAAM,OAElD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,UAAUsF,MAAM,OAElD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,UAAUsF,MAAM,UAGpD,+BACE,uCACA,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,UAAUsF,MAAM,OAElD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,UAAUsF,MAAM,GAAGC,gBAAc,MAEnE,6BACE,cAACF,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,UAAUsF,MAAM,OAElD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,UAAUsF,MAAM,UAGpD,+BACE,wCACA,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,WAAWsF,MAAM,GAAGC,gBAAc,MAEpE,6BACE,cAACF,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,WAAWsF,MAAM,OAEnD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,WAAWsF,MAAM,GAAGC,gBAAc,MAEpE,6BACE,cAACF,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,WAAWsF,MAAM,UAGrD,+BACE,6CACA,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,gBAAgBsF,MAAM,OAExD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,gBAAgBsF,MAAM,OAExD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,gBAAgBsF,MAAM,OAExD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,gBAAgBsF,MAAM,UAG1D,+BACE,sCACA,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,SAASsF,MAAM,OAEjD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,SAASsF,MAAM,OAEjD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,SAASsF,MAAM,OAEjD,6BACE,cAACD,EAAA,EAAD,CAAa7F,KAAK,WAAWQ,GAAG,SAASsF,MAAM,GAAGC,gBAAc,oBAO5E,eAACvE,EAAA,EAAD,CAAKS,UAAU,sCAAsCN,GAAG,KAAxD,UACE,cAACc,EAAA,EAAO8B,OAAR,CAAetC,UAAU,4BAA4BjC,KAAK,SAAS0C,MAAM,UAAzE,0BAGA,cAACD,EAAA,EAAO8B,OAAR,CAAe7B,MAAM,YAAYC,SAAO,EAAxC,iC,0FCGDqD,G,OApPK,WAElB,MAAwBnD,mBAAS,MAAjC,mBAAO5C,EAAP,KAAagG,EAAb,KAGA,EAAuEC,YAAQ,CAC7EC,cAAe,CAAEC,OAAQ,gBAAiBC,IAAK,QADzCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,aAAcC,EAAxC,EAAwCA,QAASC,EAAjD,EAAiDA,SAAUC,EAA3D,EAA2DA,QAG3D,OACE,eAACxF,EAAA,EAAD,CACEC,SAAUoF,GAAa,SAAAvG,GACrB0G,IACAV,EAAQhG,MAHZ,UAME,eAACsB,EAAA,EAAD,CAAKU,UAAU,OAAf,UACE,cAACT,EAAA,EAAD,CAAKG,GAAG,KAAR,SACE,qBAAIM,UAAU,OAAd,UACE,cAAC,IAAD,CAAMI,KAAM,GAAIJ,UAAU,UAC1B,sBAAMA,UAAU,eAAhB,uCAGJ,cAACT,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOK,UAAU,UAAUJ,IAAI,MAA/B,2BAGA,cAAC,IAAD,CACErB,GAAG,MACH4E,KAAK,MACLwB,GAAIC,IACJJ,QAASA,EACTlE,YAAY,aACZuE,QAAS,CAAEC,WAAY,SACvB9E,UAAW+E,IAAW,eAAgB,CACpC,aAAcT,EAAOF,aAK7B,cAAC7E,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,eAAX,oBACA,cAAC,IAAD,CACE+E,GAAIK,IACJR,QAASA,EACTjG,GAAG,eACH4E,KAAK,eACL5C,aAAa,cACbD,YAAY,iBACZuE,QAAS,CAAEI,OAAO,EAAMC,gBAAiB,MACzClF,UAAW+E,IAAW,eAAgB,CACpC,aAAuB,OAAT/G,SAAwCoD,IAAtBpD,EAAKmH,cAAoD,OAAtBnH,EAAKmH,uBAKhF,cAAC5F,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,UAAX,qBACA,cAACS,EAAA,EAAD,CACEtC,KAAK,MACLQ,GAAG,UACH4E,KAAK,UACL7C,YAAY,qBACZC,aAAa,gDAInB,cAAChB,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,YAAX,uBACA,eAAC,IAAD,CACE+E,GAAItE,IACJtC,KAAK,SACLoF,KAAK,SACL5E,GAAG,YACHiG,QAASA,EACTjE,aAAa,UACb6E,QAAkB,OAATpH,SAAkCoD,IAAhBpD,EAAKoF,QAAwC,OAAhBpF,EAAKoF,QAP/D,UASE,wBAAQC,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,8BAIN,cAAC9D,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,uBAAOG,UAAU,eAAjB,oBACA,eAACH,EAAA,EAAD,WACE,cAAC,IAAD,CACEsD,KAAK,SACLqB,QAASA,EACTa,OAAQ,SAAAC,GACN,OACE,cAAC1B,EAAA,EAAD,CACE2B,QAAM,EACNxH,KAAK,QACL8F,MAAM,OACNR,MAAM,OACN9E,GAAG,cACH4E,KAAMmC,EAAMnC,KACZiC,QAAkB,OAATpH,SAAkCoD,IAAhBpD,EAAKmG,QAAwC,OAAhBnG,EAAKmG,QAC7D3B,SAAU,kBAAMiC,EAAS,SAAU,cAK3C,cAAC,IAAD,CACEtB,KAAK,SACLqB,QAASA,EACTa,OAAQ,SAAAC,GACN,OACE,cAAC1B,EAAA,EAAD,CACE2B,QAAM,EACNxH,KAAK,QACL8F,MAAM,SACNR,MAAM,SACN9E,GAAG,gBACH4E,KAAMmC,EAAMnC,KACZW,gBAAc,EACdsB,QAAkB,OAATpH,SAAkCoD,IAAhBpD,EAAKmG,QAAwC,OAAhBnG,EAAKmG,QAC7D3B,SAAU,kBAAMiC,EAAS,SAAU,wBAQjD,cAAClF,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,uBAAOG,UAAU,eAAjB,6BACA,eAACH,EAAA,EAAD,WACE,cAAC+D,EAAA,EAAD,CACE2B,QAAM,EACNxH,KAAK,WACLoF,KAAK,QACL5E,GAAG,aACH8E,MAAM,QACNQ,MAAM,QACNC,gBAAc,IAEhB,cAACF,EAAA,EAAD,CACE2B,QAAM,EACNxH,KAAK,WACLoF,KAAK,QACL5E,GAAG,WACH8E,MAAM,WACNQ,MAAM,WACNC,gBAAc,IAEhB,cAACF,EAAA,EAAD,CAAa2B,QAAM,EAACxH,KAAK,WAAWoF,KAAK,QAAQ5E,GAAG,aAAa8E,MAAM,QAAQQ,MAAM,qBAK7F,eAACvE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKG,GAAG,KAAR,SACE,qBAAIM,UAAU,YAAd,UACE,cAAC,IAAD,CAAQI,KAAM,GAAIJ,UAAU,UAC5B,sBAAMA,UAAU,eAAhB,0BAGJ,cAACT,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,YAAX,4BACA,cAACS,EAAA,EAAD,CACE9B,GAAG,YACH4E,KAAK,WACL5C,aAAa,0BACbiF,SAAUnB,EAAS,CAAEoB,UAAU,IAC/BzF,UAAW+E,IAAW,CACpB,aAAcT,EAAOoB,kBAK7B,cAACnG,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,YAAX,4BACA,cAACS,EAAA,EAAD,CAAOC,YAAY,0BAA0B/B,GAAG,YAAY4E,KAAK,mBAGrE,cAAC5D,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,WAAX,sBACA,cAACS,EAAA,EAAD,CACE9B,GAAG,WACH4E,KAAK,WACL7C,YAAY,SACZkF,SAAUnB,EAAS,CAAEoB,UAAU,IAC/BL,QAASd,EAAOqB,WAAY,SAIlC,cAACpG,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,OAAX,kBACA,cAACS,EAAA,EAAD,CAAOE,aAAa,YAAYD,YAAY,YAAY/B,GAAG,OAAO4E,KAAK,cAG3E,cAAC5D,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACS,EAAA,EAAD,CACEE,aAAa,WACbD,YAAY,WACZ/B,GAAG,QACH4E,KAAK,QACLqC,SAAUnB,EAAS,CAAEoB,UAAU,IAC/BL,QAASd,EAAOsB,QAAS,SAI/B,cAACrG,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAOC,IAAI,UAAX,qBACA,cAACS,EAAA,EAAD,CACEC,YAAY,gBACZ/B,GAAG,UACH4E,KAAK,UACLqC,SAAUnB,EAAS,CAAEoB,UAAU,IAC/BL,QAASd,EAAOuB,UAAW,SAIjC,eAACtG,EAAA,EAAD,CAAKS,UAAU,sCAAf,UACE,cAACQ,EAAA,EAAD,CAAQzC,KAAK,SAAS0C,MAAM,UAAUT,UAAU,4BAAhD,0BAGA,cAACQ,EAAA,EAAD,CAAQzC,KAAK,QAAQ0C,MAAM,YAAYC,SAAO,EAA9C,8B,oHCtKKoF,UAjEE,WAEf,MAAkClF,mBAAS,KAA3C,mBAAOmF,EAAP,KAAkBC,EAAlB,KACEC,EAAQC,aAAY,SAAAN,GAAK,OAAIA,EAAMzH,SACnCV,EAAW0I,cACT5H,EAAO6H,cAAP7H,GAGE8H,EAAS,SAAAC,GAAG,OAAIN,EAAaM,IAQnC,OALArF,qBAAU,WAER,OADAxD,EAASa,YAAQiI,SAAShI,KACnB,kBAAMd,EAASa,YAAQiI,SAAS,QACtC,CAAC9I,EAAUc,IAEgB,OAAvB0H,EAAMzH,mBAAgD4C,IAAvB6E,EAAMzH,aAC1C,cAACc,EAAA,EAAD,CAAKU,UAAU,gBAAf,SACE,cAACT,EAAA,EAAD,CAAKG,GAAG,KAAR,SACE,cAAC8G,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAUzG,UAAU,OAApB,UACE,eAAC0G,EAAA,EAAD,CAAKC,OAAK,EAAV,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASC,OAAsB,MAAdf,EAAmBgB,QAAS,kBAAMV,EAAO,MAA1D,UACE,cAAC,IAAD,CAAMjG,KAAM,KACZ,sBAAMJ,UAAU,iCAAhB,0BAGJ,cAAC4G,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASC,OAAsB,MAAdf,EAAmBgB,QAAS,kBAAMV,EAAO,MAA1D,UACE,cAAC,IAAD,CAAMjG,KAAM,KACZ,sBAAMJ,UAAU,iCAAhB,8BAGJ,cAAC4G,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASC,OAAsB,MAAdf,EAAmBgB,QAAS,kBAAMV,EAAO,MAA1D,UACE,cAAC,IAAD,CAAQjG,KAAM,KACd,sBAAMJ,UAAU,iCAAhB,4BAIN,eAACgH,EAAA,EAAD,CAAYjB,UAAWA,EAAvB,UACE,cAACkB,EAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,EAAD,CAAY3I,aAAcyH,EAAMzH,iBAElC,cAACyI,EAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAAC,EAAD,MAEF,cAACD,EAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACE,EAAD,kBAQZ,eAACC,GAAA,EAAD,CAAO5G,MAAM,SAAb,UACE,oBAAIT,UAAU,gBAAd,4BACA,sBAAKA,UAAU,aAAf,2BACiBzB,EADjB,4CAC6D,cAAC,IAAD,CAAM+I,GAAG,kBAAT","file":"static/js/25.5420a9d6.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// ** Get all Data\r\nexport const getAllData = () => {\r\n  return async dispatch => {\r\n    await axios.get('/api/users/list/all-data').then(response => {\r\n      dispatch({\r\n        type: 'GET_ALL_DATA',\r\n        data: response.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Get data on page or row change\r\nexport const getData = params => {\r\n  return async dispatch => {\r\n    await axios.get('/api/users/list/data', params).then(response => {\r\n      dispatch({\r\n        type: 'GET_DATA',\r\n        data: response.data.users,\r\n        totalPages: response.data.total,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Get User\r\nexport const getUser = id => {\r\n  return async dispatch => {\r\n    await axios\r\n      .get('/api/users/user', { id })\r\n      .then(response => {\r\n        dispatch({\r\n          type: 'GET_USER',\r\n          selectedUser: response.data.user\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\n// ** Add new user\r\nexport const addUser = user => {\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .post('/apps/users/add-user', user)\r\n      .then(response => {\r\n        dispatch({\r\n          type: 'ADD_USER',\r\n          user\r\n        })\r\n      })\r\n      .then(() => {\r\n        dispatch(getData(getState().users.params))\r\n        dispatch(getAllData())\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\n// ** Delete user\r\nexport const deleteUser = id => {\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .delete('/apps/users/delete', { id })\r\n      .then(response => {\r\n        dispatch({\r\n          type: 'DELETE_USER'\r\n        })\r\n      })\r\n      .then(() => {\r\n        dispatch(getData(getState().users.params))\r\n        dispatch(getAllData())\r\n      })\r\n  }\r\n}\r\n","// ** Third Party Components\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from 'reactstrap'\nimport { Twitter, Facebook, Instagram, GitHub, Codepen, Slack } from 'react-feather'\n\nconst UserSocialTab = () => {\n  return (\n    <Form onSubmit={e => e.preventDefault()}>\n      <Row>\n        <Col lg='4' md='6' sm='12'>\n          <Label for='twitter'>Twitter</Label>\n          <FormGroup tag={InputGroup} className='input-group-merge'>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Twitter size={17} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              id='twitter'\n              placeholder='https://www.twitter.com/'\n              defaultValue='https://www.twitter.com/adoptionism744'\n            />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6' sm='12'>\n          <Label for='facebook'>Facebook</Label>\n          <FormGroup tag={InputGroup} className='input-group-merge'>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Facebook size={17} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              id='facebook'\n              placeholder='https://www.facebook.com/'\n              defaultValue='https://www.facebook.com/adoptionism664'\n            />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6' sm='12'>\n          <Label for='instagram'>Instagram</Label>\n          <FormGroup tag={InputGroup} className='input-group-merge'>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Instagram size={17} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              id='instagram'\n              placeholder='https://www.instagram.com/'\n              defaultValue='https://www.instagram.com/adopt-ionism744'\n            />\n          </FormGroup>\n        </Col>\n\n        <Col lg='4' md='6' sm='12'>\n          <Label for='github'>Github</Label>\n          <FormGroup tag={InputGroup} className='input-group-merge'>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <GitHub size={17} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input id='github' placeholder='https://www.github.com/' defaultValue='https://www.github.com/madop818' />\n          </FormGroup>\n        </Col>\n\n        <Col lg='4' md='6' sm='12'>\n          <Label for='codepen'>Codepen</Label>\n          <FormGroup tag={InputGroup} className='input-group-merge'>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Codepen size={17} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              id='codepen'\n              placeholder='https://www.codepen.com/'\n              defaultValue='https://www.codepen.com/adoptism243/'\n            />\n          </FormGroup>\n        </Col>\n\n        <Col lg='4' md='6' sm='12'>\n          <Label for='slack'>Slack</Label>\n          <FormGroup tag={InputGroup} className='input-group-merge'>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Slack size={17} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input id='slack' placeholder='https://www.slack.com/' defaultValue='@adoptionism744' />\n          </FormGroup>\n        </Col>\n\n        <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n          <Button className='mb-1 mb-sm-0 mr-0 mr-sm-1' color='primary'>\n            Save Changes\n          </Button>\n          <Button color='secondary' outline>\n            Reset\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\nexport default UserSocialTab\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Lock, Edit, Trash2 } from 'react-feather'\nimport { Media, Row, Col, Button, Form, Input, Label, FormGroup, Table, CustomInput } from 'reactstrap'\n\nconst UserAccountTab = ({ selectedUser }) => {\n  // ** States\n  const [img, setImg] = useState(null)\n  const [userData, setUserData] = useState(null)\n\n  // ** Function to change user image\n  const onChange = e => {\n    const reader = new FileReader(),\n      files = e.target.files\n    reader.onload = function () {\n      setImg(reader.result)\n    }\n    reader.readAsDataURL(files[0])\n  }\n\n  // ** Update user image on mount or change\n  useEffect(() => {\n    if (selectedUser !== null || (selectedUser !== null && userData !== null && selectedUser.id !== userData.id)) {\n      setUserData(selectedUser)\n      if (selectedUser.avatar.length) {\n        return setImg(selectedUser.avatar)\n      } else {\n        return setImg(null)\n      }\n    }\n  }, [selectedUser])\n\n  // ** Renders User\n  const renderUserAvatar = () => {\n    if (img === null) {\n      const stateNum = Math.floor(Math.random() * 6),\n        states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n        color = states[stateNum]\n      return (\n        <Avatar\n          initials\n          color={color}\n          className='rounded mr-2 my-25'\n          content={selectedUser.fullName}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(36px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '90px',\n            width: '90px'\n          }}\n        />\n      )\n    } else {\n      return (\n        <img\n          className='user-avatar rounded mr-2 my-25 cursor-pointer'\n          src={img}\n          alt='user profile avatar'\n          height='90'\n          width='90'\n        />\n      )\n    }\n  }\n\n  if (userData === null || userData === undefined) {\n    return null\n  } else {\n    return (\n      <Row>\n        <Col sm='12'>\n          <Media className='mb-2'>\n            {renderUserAvatar()}\n            <Media className='mt-50' body>\n              <h4>{selectedUser.fullName} </h4>\n              <div className='d-flex flex-wrap mt-1 px-0'>\n                <Button.Ripple id='change-img' tag={Label} className='mr-75 mb-0' color='primary'>\n                  <span className='d-none d-sm-block'>Change</span>\n                  <span className='d-block d-sm-none'>\n                    <Edit size={14} />\n                  </span>\n                  <input type='file' hidden id='change-img' onChange={onChange} accept='image/*' />\n                </Button.Ripple>\n                <Button.Ripple color='secondary' outline>\n                  <span className='d-none d-sm-block'>Remove</span>\n                  <span className='d-block d-sm-none'>\n                    <Trash2 size={14} />\n                  </span>\n                </Button.Ripple>\n              </div>\n            </Media>\n          </Media>\n        </Col>\n        <Col sm='12'>\n          <Form onSubmit={e => e.preventDefault()}>\n            <Row>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='username'>Username</Label>\n                  <Input type='text' id='username' placeholder='Username' defaultValue={userData.username} />\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='name'>Name</Label>\n                  <Input type='text' id='name' placeholder='Name' defaultValue={userData.fullName} />\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='email'>Email</Label>\n                  <Input type='text' id='email' placeholder='Email' defaultValue={userData.email} />\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='status'>Status</Label>\n                  <Input type='select' name='status' id='status' defaultValue={userData.status}>\n                    <option value='pending'>Pending</option>\n                    <option value='active'>Active</option>\n                    <option value='inactive'>Inactive</option>\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='role'>Role</Label>\n                  <Input type='select' name='role' id='role' defaultValue={userData.role}>\n                    <option value='admin'>Admin</option>\n                    <option value='author'>Author</option>\n                    <option value='editor'>Editor</option>\n                    <option value='maintainer'>Maintainer</option>\n                    <option value='subscriber'>Subscriber</option>\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='company'>Company</Label>\n                  <Input\n                    type='text'\n                    id='company'\n                    defaultValue={userData.company}\n                    placeholder='WinDon Technologies Pvt Ltd'\n                  />\n                </FormGroup>\n              </Col>\n              <Col sm='12'>\n                <div className='permissions border mt-1'>\n                  <h6 className='py-1 mx-1 mb-0 font-medium-2'>\n                    <Lock size={18} className='mr-25' />\n                    <span className='align-middle'>Permissions</span>\n                  </h6>\n                  <Table borderless striped responsive>\n                    <thead className='thead-light'>\n                      <tr>\n                        <th>Module</th>\n                        <th>Read</th>\n                        <th>Write</th>\n                        <th>Create</th>\n                        <th>Delete</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Admin</td>\n                        <td>\n                          <CustomInput type='checkbox' id='admin-1' label='' defaultChecked />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='admin-2' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='admin-3' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='admin-4' label='' />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Staff</td>\n                        <td>\n                          <CustomInput type='checkbox' id='staff-1' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='staff-2' label='' defaultChecked />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='staff-3' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='staff-4' label='' />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Author</td>\n                        <td>\n                          <CustomInput type='checkbox' id='author-1' label='' defaultChecked />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='author-2' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='author-3' label='' defaultChecked />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='author-4' label='' />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Contributor</td>\n                        <td>\n                          <CustomInput type='checkbox' id='contributor-1' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='contributor-2' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='contributor-3' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='contributor-4' label='' />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>User</td>\n                        <td>\n                          <CustomInput type='checkbox' id='user-1' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='user-2' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='user-3' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='user-4' label='' defaultChecked />\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </div>\n              </Col>\n              <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n                <Button.Ripple className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\n                  Save Changes\n                </Button.Ripple>\n                <Button.Ripple color='secondary' outline>\n                  Reset\n                </Button.Ripple>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default UserAccountTab\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport Cleave from 'cleave.js/react'\nimport Flatpickr from 'react-flatpickr'\nimport { User, MapPin } from 'react-feather'\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { useForm, Controller } from 'react-hook-form'\nimport { Row, Col, Button, Label, FormGroup, Input, CustomInput, Form } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst UserInfoTab = () => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  // ** React hook form vars\n  const { register, errors, handleSubmit, control, setValue, trigger } = useForm({\n    defaultValues: { gender: 'gender-female', dob: null }\n  })\n  return (\n    <Form\n      onSubmit={handleSubmit(data => {\n        trigger()\n        setData(data)\n      })}\n    >\n      <Row className='mt-1'>\n        <Col sm='12'>\n          <h4 className='mb-1'>\n            <User size={20} className='mr-50' />\n            <span className='align-middle'>Personal Information</span>\n          </h4>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label className='d-block' for='dob'>\n              Date of birth\n            </Label>\n            <Controller\n              id='dob'\n              name='dob'\n              as={Flatpickr}\n              control={control}\n              placeholder='YYYY-MM-DD'\n              options={{ dateFormat: 'Y-m-d' }}\n              className={classnames('form-control', {\n                'is-invalid': errors.dob\n              })}\n            />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label for='mobileNumber'>Mobile</Label>\n            <Controller\n              as={Cleave}\n              control={control}\n              id='mobileNumber'\n              name='mobileNumber'\n              defaultValue='+6595895857'\n              placeholder='1 234 567 8900'\n              options={{ phone: true, phoneRegionCode: 'US' }}\n              className={classnames('form-control', {\n                'is-invalid': data !== null && (data.mobileNumber === undefined || data.mobileNumber === null)\n              })}\n            />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label for='website'>Website</Label>\n            <Input\n              type='url'\n              id='website'\n              name='website'\n              placeholder='https://google.com'\n              defaultValue='https://rowboat.com/insititious/Angelo'\n            />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label for='languages'>Languages</Label>\n            <Controller\n              as={Input}\n              type='select'\n              name='status'\n              id='languages'\n              control={control}\n              defaultValue='English'\n              invalid={data !== null && (data.status === undefined || data.status === null)}\n            >\n              <option value='English'>English</option>\n              <option value='Spanish'>Spanish</option>\n              <option value='French'>French</option>\n              <option value='Russian'>Russian</option>\n              <option value='German'>German</option>\n              <option value='Arabic'>Arabic</option>\n              <option value='Sanskrit'>Sanskrit</option>\n            </Controller>\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <label className='d-block mb-1'>Gender</label>\n            <FormGroup>\n              <Controller\n                name='gender'\n                control={control}\n                render={props => {\n                  return (\n                    <CustomInput\n                      inline\n                      type='radio'\n                      label='Male'\n                      value='Male'\n                      id='gender-male'\n                      name={props.name}\n                      invalid={data !== null && (data.gender === undefined || data.gender === null)}\n                      onChange={() => setValue('gender', 'male')}\n                    />\n                  )\n                }}\n              />\n              <Controller\n                name='gender'\n                control={control}\n                render={props => {\n                  return (\n                    <CustomInput\n                      inline\n                      type='radio'\n                      label='Female'\n                      value='Female'\n                      id='gender-female'\n                      name={props.name}\n                      defaultChecked\n                      invalid={data !== null && (data.gender === undefined || data.gender === null)}\n                      onChange={() => setValue('gender', 'female')}\n                    />\n                  )\n                }}\n              />\n            </FormGroup>\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <label className='d-block mb-1'>Contact Options</label>\n            <FormGroup>\n              <CustomInput\n                inline\n                type='checkbox'\n                name='terms'\n                id='emailTerms'\n                value='Email'\n                label='Email'\n                defaultChecked\n              />\n              <CustomInput\n                inline\n                type='checkbox'\n                name='terms'\n                id='msgTerms'\n                value='Messages'\n                label='Messages'\n                defaultChecked\n              />\n              <CustomInput inline type='checkbox' name='terms' id='phoneTerms' value='Phone' label='Phone' />\n            </FormGroup>\n          </FormGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm='12'>\n          <h4 className='mb-1 mt-2'>\n            <MapPin size={20} className='mr-50' />\n            <span className='align-middle'>Address</span>\n          </h4>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label for='address-1'>Address Line 1</Label>\n            <Input\n              id='address-1'\n              name='address1'\n              defaultValue='A-65, Belvedere Streets'\n              innerRef={register({ required: true })}\n              className={classnames({\n                'is-invalid': errors.address1\n              })}\n            />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label for='address-2'>Address Line 2</Label>\n            <Input placeholder='A-65, Belvedere Streets' id='address-2' name='address-2' />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label for='postcode'>Postcode</Label>\n            <Input\n              id='postcode'\n              name='postcode'\n              placeholder='597626'\n              innerRef={register({ required: true })}\n              invalid={errors.postcode && true}\n            />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label for='city'>City</Label>\n            <Input defaultValue='Manhattan' placeholder='Manhattan' id='city' name='city' />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label for='state'>State</Label>\n            <Input\n              defaultValue='New York'\n              placeholder='New York'\n              id='state'\n              name='state'\n              innerRef={register({ required: true })}\n              invalid={errors.state && true}\n            />\n          </FormGroup>\n        </Col>\n        <Col lg='4' md='6'>\n          <FormGroup>\n            <Label for='country'>Country</Label>\n            <Input\n              placeholder='United States'\n              id='country'\n              name='country'\n              innerRef={register({ required: true })}\n              invalid={errors.country && true}\n            />\n          </FormGroup>\n        </Col>\n        <Col className='d-flex flex-sm-row flex-column mt-2'>\n          <Button type='submit' color='primary' className='mb-1 mb-sm-0 mr-0 mr-sm-1'>\n            Save Changes\n          </Button>\n          <Button type='reset' color='secondary' outline>\n            Reset\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\nexport default UserInfoTab\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** User Edit Components\nimport SocialTab from './Social'\nimport AccountTab from './Account'\nimport InfoTab from './Information'\n\n// ** Store & Actions\nimport { getUser } from '../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Third Party Components\nimport { User, Info, Share2 } from 'react-feather'\nimport { Card, CardBody, Row, Col, Nav, NavItem, NavLink, TabContent, TabPane, Alert } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UserEdit = () => {\n  // ** States & Vars\n  const [activeTab, setActiveTab] = useState('1'),\n    store = useSelector(state => state.users),\n    dispatch = useDispatch(),\n    { id } = useParams()\n\n  // ** Function to toggle tabs\n  const toggle = tab => setActiveTab(tab)\n\n  // ** Function to get user on mount\n  useEffect(() => {\n    dispatch(getUser(parseInt(id)))\n    return () => dispatch(getUser(parseInt(0)))\n  }, [dispatch, id])\n\n  return store.selectedUser !== null && store.selectedUser !== undefined ? (\n    <Row className='app-user-edit'>\n      <Col sm='12'>\n        <Card>\n          <CardBody className='pt-2'>\n            <Nav pills>\n              <NavItem>\n                <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\n                  <User size={14} />\n                  <span className='align-middle d-none d-sm-block'>Account</span>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\n                  <Info size={14} />\n                  <span className='align-middle d-none d-sm-block'>Information</span>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink active={activeTab === '3'} onClick={() => toggle('3')}>\n                  <Share2 size={14} />\n                  <span className='align-middle d-none d-sm-block'>Social</span>\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n              <TabPane tabId='1'>\n                <AccountTab selectedUser={store.selectedUser} />\n              </TabPane>\n              <TabPane tabId='2'>\n                <InfoTab />\n              </TabPane>\n              <TabPane tabId='3'>\n                <SocialTab />\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>User not found</h4>\n      <div className='alert-body'>\n        User with id: {id} doesn't exist. Check list of all Users: <Link to='/apps/user/list'>Users List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default UserEdit\n"],"sourceRoot":""}