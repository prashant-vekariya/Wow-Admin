{"version":3,"sources":["@core/components/breadcrumbs/index.js","assets/images/banner/banner.png","views/Category/CategoryHeader.js","views/Category/index.js"],"names":["FaqFilter","searchTerm","setSearchTerm","handleFilter","id","Card","className","style","backgroundImage","require","default","CardBody","CardText","Form","onSubmit","e","preventDefault","InputGroup","InputGroupAddon","addonType","InputGroupText","size","Input","value","onChange","target","placeholder","KnowledgeBase","useState","data","setData","useEffect","axios","get","then","res","Content","item","Col","md","sm","CardImg","src","img","alt","top","Button","Ripple","color","tag","Link","to","category","right","icon","title","desc","CategoryHeader","Row","map","titleCondition","toLowerCase","includes","descCondition","length"],"mappings":"+GAAA,0F,iCCAA,OAAe,cAA0B,oC,uOCyC1BA,EAtCG,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aAS9C,OACE,qBAAKC,GAAG,wBAAR,SACE,cAACC,EAAA,EAAD,CACEC,UAAU,oBACVC,MAAO,CACLC,gBAAgB,OAAD,OAASC,EAAQ,KAAwCC,QAAzD,MAHnB,SAME,eAACC,EAAA,EAAD,CAAUL,UAAU,cAApB,UACE,oBAAIA,UAAU,eAAd,4BACA,eAACM,EAAA,EAAD,CAAUN,UAAU,OAApB,+BACoB,sBAAMA,UAAU,qBAAhB,sCAEpB,cAACO,EAAA,EAAD,CAAMP,UAAU,kBAAkBQ,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAnD,SACE,eAACC,EAAA,EAAD,CAAYX,UAAU,oBAAtB,UACE,cAACY,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAQC,KAAM,SAGlB,cAACC,EAAA,EAAD,CAAOC,MAAOtB,EAAYuB,SAAU,SAAAT,GAAC,OA5BhC,SAAAA,GACXZ,EACFA,EAAaY,GAEbb,EAAca,EAAEU,OAAOF,OAwB0BC,CAAST,IAAIW,YAAY,oC,2CCoCjEC,UAxDO,WACpB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,OACgCF,mBAAS,IADzC,mBACG3B,EADH,KACeC,EADf,KAGA6B,qBAAU,WACRC,IAAMC,IAAI,4BAA4BC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIN,WAC7D,IAEH,IAAMO,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACd,cAACC,EAAA,EAAD,CAAKhC,UAAU,oBAAkCiC,GAAG,IAAIC,GAAG,IAA3D,SACE,eAACnC,EAAA,EAAD,WACE,cAACoC,EAAA,EAAD,CAASC,IAAKL,EAAKM,IAAKC,IAAI,uBAAuBC,KAAG,EAACvC,UAAU,sBACjE,cAACwC,EAAA,EAAOC,OAAR,CAAezC,UAAU,oBAAoB0C,MAAM,eAAeC,IAAKC,IACrEC,GAAE,oBAAed,EAAKe,UADxB,SAEE,cAAC,IAAD,CAAQ/B,KAAM,OAEhB,cAACyB,EAAA,EAAOC,OAAR,CAAezC,UAAU,oBAAoBC,MAAO,CAAE8C,MAAO,GAAKL,MAAM,cAAxE,SACE,cAAC,IAAD,CAAU1C,UAAU,cAAce,KAAM,OAE1C,eAACV,EAAA,EAAD,CAAUL,UAAU,cAApB,UACE,+BACE,cAAC,IAAD,CAAQA,UAAU,OAAO0C,MAAM,aAAaM,KAAM,cAAC,IAAD,CAAMjC,KAAM,OAAWgB,EAAKkB,SAChF,mBAAGjD,UAAU,sBAAb,SAAoC+B,EAAKmB,cAbPnB,EAAKjC,KAkC/C,OACE,eAAC,WAAD,WAEE,cAACqD,EAAD,CAAgBxD,WAAYA,EAAYC,cAAeA,IAC7C,OAAT2B,EACC,qBAAKzB,GAAG,yBAAR,SACE,cAACsD,EAAA,EAAD,CAAKpD,UAAU,0BAAf,SApBCuB,EAAK8B,KAAI,SAAAtB,GACd,IAAMuB,EAAiBvB,EAAKkB,MAAMM,cAAcC,SAAS7D,EAAW4D,eAClEE,EAAgB1B,EAAKmB,KAAKK,cAAcC,SAAS7D,EAAW4D,eAE9D,OAAI5D,EAAW+D,OAAS,GAEbJ,GAAkBG,EADpB,cAAC3B,EAAD,CAAuBC,KAAMA,GAAfA,EAAKjC,IAInB,YAaL","file":"static/js/32.c22f9ef6.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";","import { Search } from 'react-feather'\nimport { Card, CardBody, CardText, Form, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\n\nconst FaqFilter = ({ searchTerm, setSearchTerm, handleFilter }) => {\n  const onChange = e => {\n    if (handleFilter) {\n      handleFilter(e)\n    } else {\n      setSearchTerm(e.target.value)\n    }\n  }\n\n  return (\n    <div id='knowledge-base-search'>\n      <Card\n        className='knowledge-base-bg'\n        style={{\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\n        }}\n      >\n        <CardBody className='text-center'>\n          <h2 className='text-primary'>WOW Categories</h2>\n          <CardText className='mb-2'>\n            Popular searches: <span className='font-weight-bolder'>Dance, Standup Comedy</span>\n          </CardText>\n          <Form className='kb-search-input' onSubmit={e => e.preventDefault()}>\n            <InputGroup className='input-group-merge'>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Search size={14} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input value={searchTerm} onChange={e => onChange(e)} placeholder='Find a Category...' />\n            </InputGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n\nexport default FaqFilter\n","import { Fragment, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport Avatar from '@components/avatar'\nimport { Star } from 'react-feather'\nimport { MdEdit, MdDelete } from 'react-icons/md'\nimport CategoryHeader from './CategoryHeader'\nimport { Row, Col, Card, CardBody, CardImg, Button, Badge } from 'reactstrap'\n\nimport '@styles/base/pages/page-knowledge-base.scss'\n\nconst KnowledgeBase = () => {\n  const [data, setData] = useState(null),\n    [searchTerm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n    axios.get('/faq/data/knowledge_base').then(res => setData(res.data))\n  }, [])\n\n  const Content = ({ item }) => (\n    <Col className='kb-search-content' key={item.id} md='4' sm='6'>\n      <Card>\n        <CardImg src={item.img} alt='knowledge-base-image' top className=\"position-relative\" />\n        <Button.Ripple className=\"position-absolute\" color='flat-primary' tag={Link}\n          to={`/category/${item.category}`}>\n          <MdEdit size={26} />\n        </Button.Ripple>\n        <Button.Ripple className=\"position-absolute\" style={{ right: 0 }} color='flat-danger'>\n          <MdDelete className='text-danger' size={26} />\n        </Button.Ripple>\n        <CardBody className='text-center'>\n          <h4>\n            <Avatar className='mr-2' color='light-info' icon={<Star size={14} />} />{item.title}</h4>\n          <p className='text-body mt-1 mb-0'>{item.desc}</p>\n        </CardBody>\n      </Card>\n    </Col>\n  )\n\n  const renderContent = () => {\n    return data.map(item => {\n      const titleCondition = item.title.toLowerCase().includes(searchTerm.toLowerCase()),\n        descCondition = item.desc.toLowerCase().includes(searchTerm.toLowerCase())\n\n      if (searchTerm.length < 1) {\n        return <Content key={item.id} item={item} />\n      } else if (titleCondition || descCondition) {\n        return <Content key={item.id} item={item} />\n      } else {\n        return null\n      }\n    })\n  }\n\n  return (\n    <Fragment>\n      {/* <Breadcrumbs breadCrumbTitle='Knowledge Base' breadCrumbParent='Pages' breadCrumbActive='Knowledge Base' /> */}\n      <CategoryHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n      {data !== null ? (\n        <div id='knowledge-base-content'>\n          <Row className='kb-search-content-info '>{renderContent()}</Row>\n        </div>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default KnowledgeBase\n"],"sourceRoot":""}