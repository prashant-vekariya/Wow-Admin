{"version":3,"sources":["views/Users/InternalUser/edit/Account.js","views/Users/InternalUser/edit/index.js","views/Users/InternalUser/store/action/index.js"],"names":["UserAccountTab","selectedUser","useState","img","setImg","userData","setUserData","useEffect","id","avatar","length","undefined","Row","Col","sm","Media","className","color","Math","floor","random","initials","content","fullName","contentStyles","borderRadius","fontSize","width","height","style","src","alt","renderUserAvatar","body","Button","Ripple","tag","Label","size","type","hidden","onChange","e","reader","FileReader","files","target","onload","result","readAsDataURL","accept","outline","Form","onSubmit","preventDefault","md","FormGroup","for","Input","placeholder","defaultValue","username","email","name","status","value","role","company","Table","borderless","striped","responsive","CustomInput","label","defaultChecked","Link","to","UserEdit","store","useSelector","state","users","dispatch","useDispatch","useParams","getUser","parseInt","Card","CardBody","Account","Alert","getAllData","a","axios","get","then","response","data","getData","params","totalPages","total","user","catch","err","console","log","addUser","getState","post","deleteUser","delete"],"mappings":"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","file":"static/js/38.529eaedc.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Lock, Edit, Trash2 } from 'react-feather'\nimport { Media, Row, Col, Button, Form, Input, Label, FormGroup, Table, CustomInput } from 'reactstrap'\n\nconst UserAccountTab = ({ selectedUser }) => {\n  // ** States\n  const [img, setImg] = useState(null)\n  const [userData, setUserData] = useState(null)\n\n  // ** Function to change user image\n  const onChange = e => {\n    const reader = new FileReader(),\n      files = e.target.files\n    reader.onload = function () {\n      setImg(reader.result)\n    }\n    reader.readAsDataURL(files[0])\n  }\n\n  // ** Update user image on mount or change\n  useEffect(() => {\n    if (selectedUser !== null || (selectedUser !== null && userData !== null && selectedUser.id !== userData.id)) {\n      setUserData(selectedUser)\n      if (selectedUser.avatar.length) {\n        return setImg(selectedUser.avatar)\n      } else {\n        return setImg(null)\n      }\n    }\n  }, [selectedUser])\n\n  // ** Renders User\n  const renderUserAvatar = () => {\n    if (img === null) {\n      const stateNum = Math.floor(Math.random() * 6),\n        states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n        color = states[stateNum]\n      return (\n        <Avatar\n          initials\n          color={color}\n          className='rounded mr-2 my-25'\n          content={selectedUser.fullName}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(36px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '90px',\n            width: '90px'\n          }}\n        />\n      )\n    } else {\n      return (\n        <img\n          className='user-avatar rounded mr-2 my-25 cursor-pointer'\n          src={img}\n          alt='user profile avatar'\n          height='90'\n          width='90'\n        />\n      )\n    }\n  }\n\n  if (userData === null || userData === undefined) {\n    return null\n  } else {\n    return (\n      <Row>\n        <Col sm='12'>\n          <Media className='mb-2'>\n            {renderUserAvatar()}\n            <Media className='mt-50' body>\n              <h4>{selectedUser.fullName} </h4>\n              <div className='d-flex flex-wrap mt-1 px-0'>\n                <Button.Ripple id='change-img' tag={Label} className='mr-75 mb-0' color='primary'>\n                  <span className='d-none d-sm-block'>Change</span>\n                  <span className='d-block d-sm-none'>\n                    <Edit size={14} />\n                  </span>\n                  <input type='file' hidden id='change-img' onChange={onChange} accept='image/*' />\n                </Button.Ripple>\n                <Button.Ripple color='secondary' outline>\n                  <span className='d-none d-sm-block'>Remove</span>\n                  <span className='d-block d-sm-none'>\n                    <Trash2 size={14} />\n                  </span>\n                </Button.Ripple>\n              </div>\n            </Media>\n          </Media>\n        </Col>\n        <Col sm='12'>\n          <Form onSubmit={e => e.preventDefault()}>\n            <Row>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='username'>Username</Label>\n                  <Input type='text' id='username' placeholder='Username' defaultValue={userData.username} />\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='name'>Name</Label>\n                  <Input type='text' id='name' placeholder='Name' defaultValue={userData.fullName} />\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='email'>Email</Label>\n                  <Input type='text' id='email' placeholder='Email' defaultValue={userData.email} />\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='status'>Status</Label>\n                  <Input type='select' name='status' id='status' defaultValue={userData.status}>\n                    <option value='pending'>Pending</option>\n                    <option value='active'>Active</option>\n                    <option value='inactive'>Inactive</option>\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='role'>Role</Label>\n                  <Input type='select' name='role' id='role' defaultValue={userData.role}>\n                    <option value='admin'>Admin</option>\n                    <option value='author'>Author</option>\n                    <option value='editor'>Editor</option>\n                    <option value='maintainer'>Maintainer</option>\n                    <option value='subscriber'>Subscriber</option>\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='company'>Password</Label>\n                  <Input\n                    type='text'\n                    id='company'\n                    defaultValue={userData.company}\n                    placeholder='WinDon Technologies Pvt Ltd'\n                  />\n                </FormGroup>\n              </Col>\n              <Col sm='12'>\n                <div className='permissions border mt-1'>\n                  <h6 className='py-1 mx-1 mb-0 font-medium-2'>\n                    <Lock size={18} className='mr-25' />\n                    <span className='align-middle'>Permissions</span>\n                  </h6>\n                  <Table borderless striped responsive>\n                    <thead className='thead-light'>\n                      <tr>\n                        <th>Manage User</th>\n                        <th>Manage Clips</th>\n                        <th>Change Password</th>\n                        <th>Manage Reported Contents</th>\n                        <th>Manage Tages</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <CustomInput type='checkbox' id='admin-1' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='admin-1' label='' defaultChecked />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='admin-2' label='' />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='admin-3' label='' defaultChecked />\n                        </td>\n                        <td>\n                          <CustomInput type='checkbox' id='admin-4' label='' />\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </div>\n              </Col>\n              <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n                <Button.Ripple className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\n                  Save Changes\n                </Button.Ripple>\n                <Button.Ripple tag={Link}\n                  to={`/internaluser/list`} color='secondary' outline>\n                  Cancel\n                </Button.Ripple>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default UserAccountTab\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** User Edit Components\n// import SocialTab from './Social'\nimport AccountTab from './Account'\n// import InfoTab from './Information'\n\n// ** Store & Actions\nimport { getUser } from '../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// ** Third Party Components\nimport { User, Info, Share2 } from 'react-feather'\nimport { Card, CardBody, Row, Col, Nav, NavItem, NavLink, TabContent, TabPane, Alert } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UserEdit = () => {\n  // ** States & Vars\n  const [activeTab, setActiveTab] = useState('1'),\n    store = useSelector(state => state.users),\n    dispatch = useDispatch(),\n    { id } = useParams()\n\n  // ** Function to toggle tabs\n  const toggle = tab => setActiveTab(tab)\n\n  // ** Function to get user on mount\n  useEffect(() => {\n    dispatch(getUser(parseInt(id)))\n    return () => dispatch(getUser(parseInt(0)))\n  }, [dispatch, id])\n\n  return store.selectedUser !== null && store.selectedUser !== undefined ? (\n    <Row className='app-user-edit'>\n      <Col sm='12'>\n        <Card>\n          <CardBody className='pt-2'>\n            <AccountTab selectedUser={store.selectedUser} />\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>User not found</h4>\n      <div className='alert-body'>\n        User with id: {id} doesn't exist. Check list of all Users: <Link to='/apps/user/list'>Users List</Link>\n      </div>\n    </Alert>\n  )\n}\nexport default UserEdit\n","import axios from 'axios'\n\n// ** Get all Data\nexport const getAllData = () => {\n  return async dispatch => {\n    await axios.get('/api/users/list/all-data').then(response => {\n      dispatch({\n        type: 'GET_ALL_DATA',\n        data: response.data\n      })\n    })\n  }\n}\n\n// ** Get data on page or row change\nexport const getData = params => {\n  return async dispatch => {\n    await axios.get('/api/users/list/data', params).then(response => {\n      dispatch({\n        type: 'GET_DATA',\n        data: response.data.users,\n        totalPages: response.data.total,\n        params\n      })\n    })\n  }\n}\n\n// ** Get User\nexport const getUser = id => {\n  return async dispatch => {\n    await axios\n      .get('/api/users/user', { id })\n      .then(response => {\n        dispatch({\n          type: 'GET_USER',\n          selectedUser: response.data.user\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ** Add new user\nexport const addUser = user => {\n  return (dispatch, getState) => {\n    axios\n      .post('/apps/users/add-user', user)\n      .then(response => {\n        dispatch({\n          type: 'ADD_USER',\n          user\n        })\n      })\n      .then(() => {\n        dispatch(getData(getState().users.params))\n        dispatch(getAllData())\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ** Delete user\nexport const deleteUser = id => {\n  return (dispatch, getState) => {\n    axios\n      .delete('/apps/users/delete', { id })\n      .then(response => {\n        dispatch({\n          type: 'DELETE_USER'\n        })\n      })\n      .then(() => {\n        dispatch(getData(getState().users.params))\n        dispatch(getAllData())\n      })\n  }\n}\n"],"sourceRoot":""}